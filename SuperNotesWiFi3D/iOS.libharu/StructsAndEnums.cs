// this file was generated by Objective Sharpie. 
// It is in project, but not compiled - I have taken only a couple of function descriptions 
// from here, because all functionality of the library was not needed.


using System;
using System.Runtime.InteropServices;

namespace SuperNotesWiFi3D.iOS.libharu
{
    
    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Point
    {
        public float x;

        public float y;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Box
    {
        public float left;

        public float bottom;

        public float right;

        public float top;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Point3D
    {
        public float x;

        public float y;

        public float z;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Date
    {
        public int year;

        public int month;

        public int day;

        public int hour;

        public int minutes;

        public int seconds;

        public sbyte ind;

        public int off_hour;

        public int off_minutes;
    }

    public enum HPDF_InfoType : uint
    {
        CreationDate = 0,
        ModDate,
        Author,
        Creator,
        Producer,
        Title,
        Subject,
        Keywords,
        Trapped,
        GtsPdfx,
        Eof
    }

    public enum HPDF_PDFAType : uint
    {
        A = 0,
        B = 1
    }

    public enum HPDF_PDFVer : uint
    {
        HpdfVer12 = 0,
        HpdfVer13,
        HpdfVer14,
        HpdfVer15,
        HpdfVer16,
        HpdfVer17,
        Eof
    }

    public enum HPDF_EncryptMode : uint
    {
        HpdfEncryptR2 = 2,
        HpdfEncryptR3 = 3
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TextWidth
    {
        public uint numchars;

        public uint numwords;

        public uint width;

        public uint numspace;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_DashMode
    {
        public ushort[] ptn;

        public uint num_ptn;

        public uint phase;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TransMatrix
    {
        public float a;

        public float b;

        public float c;

        public float d;

        public float x;

        public float y;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_3DMatrix
    {
        public float a;

        public float b;

        public float c;

        public float d;

        public float e;

        public float f;

        public float g;

        public float h;

        public float i;

        public float tx;

        public float ty;

        public float tz;
    }

    public enum HPDF_ColorSpace : uint
    {
        DeviceGray = 0,
        DeviceRgb,
        DeviceCmyk,
        CalGray,
        CalRgb,
        Lab,
        IccBased,
        Separation,
        DeviceN,
        Indexed,
        Pattern,
        Eof
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_RGBColor
    {
        public float r;

        public float g;

        public float b;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_CMYKColor
    {
        public float c;

        public float m;

        public float y;

        public float k;
    }

    public enum HPDF_LineCap : uint
    {
        ButtEnd = 0,
        RoundEnd,
        ProjectingScuareEnd,
        LinecapEof
    }

    public enum HPDF_LineJoin : uint
    {
        MiterJoin = 0,
        RoundJoin,
        BevelJoin,
        LinejoinEof
    }

    public enum HPDF_TextRenderingMode : uint
    {
        Fill = 0,
        Stroke,
        FillThenStroke,
        Invisible,
        FillClipping,
        StrokeClipping,
        FillStrokeClipping,
        Clipping,
        RenderingModeEof
    }

    public enum HPDF_WritingMode : uint
    {
        Horizontal = 0,
        Vertical,
        Eof
    }

    public enum HPDF_PageLayout : uint
    {
        Single = 0,
        OneColumn,
        TwoColumnLeft,
        TwoColumnRight,
        TwoPageLeft,
        TwoPageRight,
        Eof
    }

    public enum HPDF_PageMode : uint
    {
        UseNone = 0,
        UseOutline,
        UseThumbs,
        FullScreen,
        Eof
    }

    public enum HPDF_PageNumStyle : uint
    {
        Decimal = 0,
        UpperRoman,
        LowerRoman,
        UpperLetters,
        LowerLetters,
        Eof
    }

    public enum HPDF_DestinationType : uint
    {
        Xyz = 0,
        Fit,
        FitH,
        FitV,
        FitR,
        FitB,
        FitBh,
        FitBv,
        DstEof
    }

    public enum HPDF_AnnotType : uint
    {
        TextNotes,
        Link,
        Sound,
        FreeText,
        Stamp,
        Square,
        Circle,
        StrikeOut,
        Hightlight,
        Underline,
        Ink,
        FileAttachment,
        Popup,
        HpdfAnnot3d,
        Squiggly,
        Line,
        Projection,
        Widget
    }

    public enum HPDF_AnnotFlgs : uint
    {
        Invisible,
        Hidden,
        Print,
        Nozoom,
        Norotate,
        Noview,
        Readonly
    }

    public enum HPDF_AnnotHighlightMode : uint
    {
        NoHightlight = 0,
        InvertBox,
        InvertBorder,
        DownAppearance,
        HightlightModeEof
    }

    public enum HPDF_AnnotIcon : uint
    {
        Comment = 0,
        Key,
        Note,
        Help,
        NewParagraph,
        Paragraph,
        Insert,
        Eof
    }

    public enum HPDF_AnnotIntent : uint
    {
        Freetextcallout = 0,
        Freetexttypewriter,
        Linearrow,
        Linedimension,
        Polygoncloud,
        Polylinedimension,
        Polygondimension
    }

    public enum HPDF_LineAnnotEndingStyle : uint
    {
        None = 0,
        Square,
        Circle,
        Diamond,
        Openarrow,
        Closedarrow,
        Butt,
        Ropenarrow,
        Rclosedarrow,
        Slash
    }

    public enum HPDF_LineAnnotCapPosition : uint
    {
        Inline = 0,
        Top
    }

    public enum HPDF_StampAnnotName : uint
    {
        Approved = 0,
        Experimental,
        Notapproved,
        Asis,
        Expired,
        Notforpublicrelease,
        Confidential,
        Final,
        Sold,
        Departmental,
        Forcomment,
        Topsecret,
        Draft,
        Forpublicrelease
    }

    public enum HPDF_BSSubtype : uint
    {
        Solid,
        Dashed,
        Beveled,
        Inset,
        Underlined
    }

    public enum HPDF_BlendMode : uint
    {
        Normal,
        Multiply,
        Screen,
        Overlay,
        Darken,
        Lighten,
        ColorDodge,
        ColorBum,
        HardLight,
        SoftLight,
        Difference,
        Exclushon,
        Eof
    }

    public enum HPDF_TransitionStyle : uint
    {
        WipeRight = 0,
        WipeUp,
        WipeLeft,
        WipeDown,
        BarnDoorsHorizontalOut,
        BarnDoorsHorizontalIn,
        BarnDoorsVerticalOut,
        BarnDoorsVerticalIn,
        BoxOut,
        BoxIn,
        BlindsHorizontal,
        BlindsVertical,
        Dissolve,
        GlitterRight,
        GlitterDown,
        GlitterTopLeftToBottomRight,
        Replace,
        Eof
    }

    public enum HPDF_PageSizes : uint
    {
        Letter = 0,
        Legal,
        A3,
        A4,
        A5,
        B4,
        B5,
        Executive,
        US4x6,
        US4x8,
        US5x7,
        Comm10,
        Eof
    }

    public enum HPDF_PageDirection : uint
    {
        Portrait = 0,
        Landscape
    }

    public enum HPDF_EncoderType : uint
    {
        TypeSingleByte,
        TypeDoubleByte,
        TypeUninitialized,
        Unknown
    }

    public enum HPDF_ByteType : uint
    {
        Single = 0,
        Lead,
        Trial,
        Unknown
    }

    public enum HPDF_TextAlignment : uint
    {
        Left = 0,
        Right,
        Center,
        Justify
    }

    public enum HPDF_NameDictKey : uint
    {
        MbeddedFiles = 0,
        Of
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Error_Rec
    {
        public nuint error_no;

        public nuint detail_no;

        //public unsafe HPDF_Error_Handler* error_fn;
        public unsafe void* error_fn;

        public unsafe void* user_data;
    }


    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Error_Rec
    {
        public nuint error_no;

        public nuint detail_no;

        public unsafe HPDF_Error_Handler* error_fn;

        public unsafe void* user_data;
    }

    static class CFunctions
    {
        // extern HPDF_STATUS HPDF_NewDoc (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_NewDoc(HPDF_Doc* pdf);

        // extern void HPDF_Error_Init (HPDF_Error error, void *user_data);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Error_Init(HPDF_Error* error, void* user_data);

        // extern void HPDF_Error_Reset (HPDF_Error error);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Error_Reset(HPDF_Error* error);

        // extern HPDF_STATUS HPDF_Error_GetCode (HPDF_Error error);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Error_GetCode(HPDF_Error* error);

        // extern HPDF_STATUS HPDF_Error_GetDetailCode (HPDF_Error error);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Error_GetDetailCode(HPDF_Error* error);

        // extern HPDF_STATUS HPDF_SetError (HPDF_Error error, HPDF_STATUS error_no, HPDF_STATUS detail_no);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetError(HPDF_Error* error, nuint error_no, nuint detail_no);

        // extern HPDF_STATUS HPDF_RaiseError (HPDF_Error error, HPDF_STATUS error_no, HPDF_STATUS detail_no);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_RaiseError(HPDF_Error* error, nuint error_no, nuint detail_no);

        // extern HPDF_MMgr HPDF_MMgr_New (HPDF_Error error, HPDF_UINT buf_size, HPDF_Alloc_Func alloc_fn, HPDF_Free_Func free_fn);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_MMgr* HPDF_MMgr_New(HPDF_Error* error, uint buf_size, HPDF_Alloc_Func* alloc_fn, HPDF_Free_Func* free_fn);

        // extern void HPDF_MMgr_Free (HPDF_MMgr mmgr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_MMgr_Free(HPDF_MMgr* mmgr);

        // extern void * HPDF_GetMem (HPDF_MMgr mmgr, HPDF_UINT size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void* HPDF_GetMem(HPDF_MMgr* mmgr, uint size);

        // extern void HPDF_FreeMem (HPDF_MMgr mmgr, void *aptr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_FreeMem(HPDF_MMgr* mmgr, void* aptr);

        // extern HPDF_List HPDF_List_New (HPDF_MMgr mmgr, HPDF_UINT items_per_block);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_List* HPDF_List_New(HPDF_MMgr* mmgr, uint items_per_block);

        // extern void HPDF_List_Free (HPDF_List list);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_List_Free(HPDF_List* list);

        // extern HPDF_STATUS HPDF_List_Add (HPDF_List list, void *item);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_List_Add(HPDF_List* list, void* item);

        // extern HPDF_STATUS HPDF_List_Insert (HPDF_List list, void *target, void *item);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_List_Insert(HPDF_List* list, void* target, void* item);

        // extern HPDF_STATUS HPDF_List_Remove (HPDF_List list, void *item);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_List_Remove(HPDF_List* list, void* item);

        // extern void * HPDF_List_RemoveByIndex (HPDF_List list, HPDF_UINT index);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void* HPDF_List_RemoveByIndex(HPDF_List* list, uint index);

        // extern void * HPDF_List_ItemAt (HPDF_List list, HPDF_UINT index);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void* HPDF_List_ItemAt(HPDF_List* list, uint index);

        // extern HPDF_INT32 HPDF_List_Find (HPDF_List list, void *item);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_List_Find(HPDF_List* list, void* item);

        // extern void HPDF_List_Clear (HPDF_List list);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_List_Clear(HPDF_List* list);

        // extern void HPDF_MD5Init (struct HPDF_MD5Context *ctx);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_MD5Init(HPDF_MD5Context* ctx);

        // extern void HPDF_MD5Update (struct HPDF_MD5Context *ctx, const HPDF_BYTE *buf, HPDF_UINT32 len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_MD5Update(HPDF_MD5Context* ctx, byte* buf, uint len);

        // extern void HPDF_MD5Final (HPDF_BYTE *digest, struct HPDF_MD5Context *ctx);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_MD5Final(byte[] digest, HPDF_MD5Context* ctx);

        // extern void HPDF_PadOrTrancatePasswd (const char *pwd, HPDF_BYTE *new_pwd);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_PadOrTrancatePasswd(sbyte* pwd, byte* new_pwd);

        // extern void HPDF_Encrypt_Init (HPDF_Encrypt attr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_Init(HPDF_Encrypt* attr);

        // extern void HPDF_Encrypt_CreateUserKey (HPDF_Encrypt attr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_CreateUserKey(HPDF_Encrypt* attr);

        // extern void HPDF_Encrypt_CreateOwnerKey (HPDF_Encrypt attr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_CreateOwnerKey(HPDF_Encrypt* attr);

        // extern void HPDF_Encrypt_CreateEncryptionKey (HPDF_Encrypt attr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_CreateEncryptionKey(HPDF_Encrypt* attr);

        // extern void HPDF_Encrypt_InitKey (HPDF_Encrypt attr, HPDF_UINT32 object_id, HPDF_UINT16 gen_no);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_InitKey(HPDF_Encrypt* attr, uint object_id, ushort gen_no);

        // extern void HPDF_Encrypt_Reset (HPDF_Encrypt attr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_Reset(HPDF_Encrypt* attr);

        // extern void HPDF_Encrypt_CryptBuf (HPDF_Encrypt attr, const HPDF_BYTE *src, HPDF_BYTE *dst, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encrypt_CryptBuf(HPDF_Encrypt* attr, byte* src, byte* dst, uint len);

        // extern HPDF_Stream HPDF_MemStream_New (HPDF_MMgr mmgr, HPDF_UINT buf_siz);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Stream* HPDF_MemStream_New(HPDF_MMgr* mmgr, uint buf_siz);

        // extern HPDF_BYTE * HPDF_MemStream_GetBufPtr (HPDF_Stream stream, HPDF_UINT index, HPDF_UINT *length);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe byte* HPDF_MemStream_GetBufPtr(HPDF_Stream* stream, uint index, uint* length);

        // extern HPDF_UINT HPDF_MemStream_GetBufSize (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_MemStream_GetBufSize(HPDF_Stream* stream);

        // extern HPDF_UINT HPDF_MemStream_GetBufCount (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_MemStream_GetBufCount(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_MemStream_Rewrite (HPDF_Stream stream, HPDF_BYTE *buf, HPDF_UINT size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MemStream_Rewrite(HPDF_Stream* stream, byte* buf, uint size);

        // extern void HPDF_MemStream_FreeData (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_MemStream_FreeData(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Stream_WriteToStream (HPDF_Stream src, HPDF_Stream dst, HPDF_UINT filter, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteToStream(HPDF_Stream* src, HPDF_Stream* dst, uint filter, HPDF_Encrypt* e);

        // extern HPDF_Stream HPDF_FileReader_New (HPDF_MMgr mmgr, const char *fname);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Stream* HPDF_FileReader_New(HPDF_MMgr* mmgr, sbyte* fname);

        // extern HPDF_Stream HPDF_FileWriter_New (HPDF_MMgr mmgr, const char *fname);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Stream* HPDF_FileWriter_New(HPDF_MMgr* mmgr, sbyte* fname);

        // extern HPDF_Stream HPDF_CallbackReader_New (HPDF_MMgr mmgr, HPDF_Stream_Read_Func read_fn, HPDF_Stream_Seek_Func seek_fn, HPDF_Stream_Tell_Func tell_fn, HPDF_Stream_Size_Func size_fn, void *data);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Stream* HPDF_CallbackReader_New(HPDF_MMgr* mmgr, HPDF_Stream_Read_Func* read_fn, HPDF_Stream_Seek_Func* seek_fn, HPDF_Stream_Tell_Func* tell_fn, HPDF_Stream_Size_Func* size_fn, void* data);

        // extern HPDF_Stream HPDF_CallbackWriter_New (HPDF_MMgr mmgr, HPDF_Stream_Write_Func write_fn, void *data);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Stream* HPDF_CallbackWriter_New(HPDF_MMgr* mmgr, HPDF_Stream_Write_Func* write_fn, void* data);

        // extern void HPDF_Stream_Free (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Stream_Free(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Stream_WriteChar (HPDF_Stream stream, char value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteChar(HPDF_Stream* stream, sbyte value);

        // extern HPDF_STATUS HPDF_Stream_WriteStr (HPDF_Stream stream, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteStr(HPDF_Stream* stream, sbyte* value);

        // extern HPDF_STATUS HPDF_Stream_WriteUChar (HPDF_Stream stream, HPDF_BYTE value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteUChar(HPDF_Stream* stream, byte value);

        // extern HPDF_STATUS HPDF_Stream_WriteInt (HPDF_Stream stream, HPDF_INT value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteInt(HPDF_Stream* stream, int value);

        // extern HPDF_STATUS HPDF_Stream_WriteUInt (HPDF_Stream stream, HPDF_UINT value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteUInt(HPDF_Stream* stream, uint value);

        // extern HPDF_STATUS HPDF_Stream_WriteReal (HPDF_Stream stream, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteReal(HPDF_Stream* stream, float value);

        // extern HPDF_STATUS HPDF_Stream_Write (HPDF_Stream stream, const HPDF_BYTE *ptr, HPDF_UINT size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_Write(HPDF_Stream* stream, byte* ptr, uint size);

        // extern HPDF_STATUS HPDF_Stream_Read (HPDF_Stream stream, HPDF_BYTE *ptr, HPDF_UINT *size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_Read(HPDF_Stream* stream, byte* ptr, uint* size);

        // extern HPDF_STATUS HPDF_Stream_ReadLn (HPDF_Stream stream, char *s, HPDF_UINT *size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_ReadLn(HPDF_Stream* stream, sbyte* s, uint* size);

        // extern HPDF_INT32 HPDF_Stream_Tell (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Stream_Tell(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Stream_Seek (HPDF_Stream stream, HPDF_INT pos, HPDF_WhenceMode mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_Seek(HPDF_Stream* stream, int pos, HPDF_WhenceMode mode);

        // extern HPDF_BOOL HPDF_Stream_EOF (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Stream_EOF(HPDF_Stream* stream);

        // extern HPDF_UINT32 HPDF_Stream_Size (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Stream_Size(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Stream_Flush (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_Flush(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Stream_WriteEscapeName (HPDF_Stream stream, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteEscapeName(HPDF_Stream* stream, sbyte* value);

        // extern HPDF_STATUS HPDF_Stream_WriteEscapeText2 (HPDF_Stream stream, const char *text, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteEscapeText2(HPDF_Stream* stream, sbyte* text, uint len);

        // extern HPDF_STATUS HPDF_Stream_WriteEscapeText (HPDF_Stream stream, const char *text);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteEscapeText(HPDF_Stream* stream, sbyte* text);

        // extern HPDF_STATUS HPDF_Stream_WriteBinary (HPDF_Stream stream, const HPDF_BYTE *data, HPDF_UINT len, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_WriteBinary(HPDF_Stream* stream, byte* data, uint len, HPDF_Encrypt* e);

        // extern HPDF_STATUS HPDF_Stream_Validate (HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Stream_Validate(HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Encoder_Validate (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Encoder_Validate(HPDF_Encoder* encoder);

        // extern void HPDF_Encoder_SetParseText (HPDF_Encoder encoder, HPDF_ParseText_Rec *state, const HPDF_BYTE *text, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encoder_SetParseText(HPDF_Encoder* encoder, HPDF_ParseText_Rec* state, byte* text, uint len);

        // extern HPDF_ByteType HPDF_Encoder_ByteType (HPDF_Encoder encoder, HPDF_ParseText_Rec *state);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ByteType HPDF_Encoder_ByteType(HPDF_Encoder* encoder, HPDF_ParseText_Rec* state);

        // extern HPDF_UNICODE HPDF_Encoder_ToUnicode (HPDF_Encoder encoder, HPDF_UINT16 code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_Encoder_ToUnicode(HPDF_Encoder* encoder, ushort code);

        // extern void HPDF_Encoder_Free (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Encoder_Free(HPDF_Encoder* encoder);

        // extern HPDF_Encoder HPDF_BasicEncoder_New (HPDF_MMgr mmgr, const char *encoding_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Encoder* HPDF_BasicEncoder_New(HPDF_MMgr* mmgr, sbyte* encoding_name);

        // extern void HPDF_BasicEncoder_Free (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_BasicEncoder_Free(HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_BasicEncoder_Write (HPDF_Encoder encoder, HPDF_Stream out);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_BasicEncoder_Write(HPDF_Encoder* encoder, HPDF_Stream* @out);

        // extern HPDF_UNICODE HPDF_BasicEncoder_ToUnicode (HPDF_Encoder encoder, HPDF_UINT16 code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_BasicEncoder_ToUnicode(HPDF_Encoder* encoder, ushort code);

        // extern HPDF_Encoder HPDF_CMapEncoder_New (HPDF_MMgr mmgr, char *name, HPDF_Encoder_Init_Func init_fn);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Encoder* HPDF_CMapEncoder_New(HPDF_MMgr* mmgr, sbyte* name, HPDF_Encoder_Init_Func* init_fn);

        // extern HPDF_STATUS HPDF_CMapEncoder_InitAttr (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_InitAttr(HPDF_Encoder* encoder);

        // extern void HPDF_CMapEncoder_Free (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_CMapEncoder_Free(HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_CMapEncoder_Write (HPDF_Encoder encoder, HPDF_Stream out);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_Write(HPDF_Encoder* encoder, HPDF_Stream* @out);

        // extern HPDF_UNICODE HPDF_CMapEncoder_ToUnicode (HPDF_Encoder encoder, HPDF_UINT16 code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_CMapEncoder_ToUnicode(HPDF_Encoder* encoder, ushort code);

        // extern HPDF_UINT16 HPDF_CMapEncoder_ToCID (HPDF_Encoder encoder, HPDF_UINT16 code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_CMapEncoder_ToCID(HPDF_Encoder* encoder, ushort code);

        // extern HPDF_STATUS HPDF_CMapEncoder_SetParseText (HPDF_Encoder encoder, HPDF_ParseText_Rec *state, const HPDF_BYTE *text, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_SetParseText(HPDF_Encoder* encoder, HPDF_ParseText_Rec* state, byte* text, uint len);

        // extern HPDF_ByteType HPDF_CMapEncoder_ByteType (HPDF_Encoder encoder, HPDF_ParseText_Rec *state);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ByteType HPDF_CMapEncoder_ByteType(HPDF_Encoder* encoder, HPDF_ParseText_Rec* state);

        // extern HPDF_STATUS HPDF_CMapEncoder_AddCMap (HPDF_Encoder encoder, const HPDF_CidRange_Rec *range);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_AddCMap(HPDF_Encoder* encoder, HPDF_CidRange_Rec* range);

        // extern HPDF_STATUS HPDF_CMapEncoder_AddNotDefRange (HPDF_Encoder encoder, HPDF_CidRange_Rec range);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_AddNotDefRange(HPDF_Encoder* encoder, HPDF_CidRange_Rec range);

        // extern HPDF_STATUS HPDF_CMapEncoder_AddCodeSpaceRange (HPDF_Encoder encoder, HPDF_CidRange_Rec range);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_AddCodeSpaceRange(HPDF_Encoder* encoder, HPDF_CidRange_Rec range);

        // extern void HPDF_CMapEncoder_SetUnicodeArray (HPDF_Encoder encoder, const HPDF_UnicodeMap_Rec *array1);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_CMapEncoder_SetUnicodeArray(HPDF_Encoder* encoder, HPDF_UnicodeMap_Rec* array1);

        // extern HPDF_STATUS HPDF_CMapEncoder_AddJWWLineHead (HPDF_Encoder encoder, const HPDF_UINT16 *code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CMapEncoder_AddJWWLineHead(HPDF_Encoder* encoder, ushort* code);

        // extern HPDF_BOOL HPDF_Encoder_CheckJWWLineHead (HPDF_Encoder encoder, const HPDF_UINT16 code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Encoder_CheckJWWLineHead(HPDF_Encoder* encoder, ushort code);

        // extern const char * HPDF_UnicodeToGryphName (HPDF_UNICODE unicode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_UnicodeToGryphName(ushort unicode);

        // extern HPDF_UNICODE HPDF_GryphNameToUnicode (const char *gryph_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_GryphNameToUnicode(sbyte* gryph_name);

        // extern HPDF_STATUS HPDF_Obj_WriteValue (void *obj, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Obj_WriteValue(void* obj, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern HPDF_STATUS HPDF_Obj_Write (void *obj, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Obj_Write(void* obj, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern void HPDF_Obj_Free (HPDF_MMgr mmgr, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Obj_Free(HPDF_MMgr* mmgr, void* obj);

        // extern void HPDF_Obj_ForceFree (HPDF_MMgr mmgr, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Obj_ForceFree(HPDF_MMgr* mmgr, void* obj);

        // extern HPDF_Null HPDF_Null_New (HPDF_MMgr mmgr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Null* HPDF_Null_New(HPDF_MMgr* mmgr);

        // extern HPDF_Boolean HPDF_Boolean_New (HPDF_MMgr mmgr, HPDF_BOOL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Boolean* HPDF_Boolean_New(HPDF_MMgr* mmgr, int value);

        // extern HPDF_STATUS HPDF_Boolean_Write (HPDF_Boolean obj, HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Boolean_Write(HPDF_Boolean* obj, HPDF_Stream* stream);

        // extern HPDF_Number HPDF_Number_New (HPDF_MMgr mmgr, HPDF_INT32 value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Number* HPDF_Number_New(HPDF_MMgr* mmgr, int value);

        // extern void HPDF_Number_SetValue (HPDF_Number obj, HPDF_INT32 value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Number_SetValue(HPDF_Number* obj, int value);

        // extern HPDF_STATUS HPDF_Number_Write (HPDF_Number obj, HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Number_Write(HPDF_Number* obj, HPDF_Stream* stream);

        // extern HPDF_Real HPDF_Real_New (HPDF_MMgr mmgr, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Real* HPDF_Real_New(HPDF_MMgr* mmgr, float value);

        // extern HPDF_STATUS HPDF_Real_Write (HPDF_Real obj, HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Real_Write(HPDF_Real* obj, HPDF_Stream* stream);

        // extern HPDF_STATUS HPDF_Real_SetValue (HPDF_Real obj, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Real_SetValue(HPDF_Real* obj, float value);

        // extern HPDF_Name HPDF_Name_New (HPDF_MMgr mmgr, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Name* HPDF_Name_New(HPDF_MMgr* mmgr, sbyte* value);

        // extern HPDF_STATUS HPDF_Name_SetValue (HPDF_Name obj, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Name_SetValue(HPDF_Name* obj, sbyte* value);

        // extern HPDF_STATUS HPDF_Name_Write (HPDF_Name obj, HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Name_Write(HPDF_Name* obj, HPDF_Stream* stream);

        // extern const char * HPDF_Name_GetValue (HPDF_Name obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Name_GetValue(HPDF_Name* obj);

        // extern HPDF_String HPDF_String_New (HPDF_MMgr mmgr, const char *value, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_String* HPDF_String_New(HPDF_MMgr* mmgr, sbyte* value, HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_String_SetValue (HPDF_String obj, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_String_SetValue(HPDF_String* obj, sbyte* value);

        // extern void HPDF_String_Free (HPDF_String obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_String_Free(HPDF_String* obj);

        // extern HPDF_STATUS HPDF_String_Write (HPDF_String obj, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_String_Write(HPDF_String* obj, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern HPDF_INT32 HPDF_String_Cmp (HPDF_String s1, HPDF_String s2);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_String_Cmp(HPDF_String* s1, HPDF_String* s2);

        // extern HPDF_Binary HPDF_Binary_New (HPDF_MMgr mmgr, HPDF_BYTE *value, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Binary* HPDF_Binary_New(HPDF_MMgr* mmgr, byte* value, uint len);

        // extern HPDF_STATUS HPDF_Binary_SetValue (HPDF_Binary obj, HPDF_BYTE *value, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Binary_SetValue(HPDF_Binary* obj, byte* value, uint len);

        // extern HPDF_BYTE * HPDF_Binary_GetValue (HPDF_Binary obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe byte* HPDF_Binary_GetValue(HPDF_Binary* obj);

        // extern void HPDF_Binary_Free (HPDF_Binary obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Binary_Free(HPDF_Binary* obj);

        // extern HPDF_STATUS HPDF_Binary_Write (HPDF_Binary obj, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Binary_Write(HPDF_Binary* obj, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern HPDF_UINT HPDF_Binary_GetLen (HPDF_Binary obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Binary_GetLen(HPDF_Binary* obj);

        // extern HPDF_Array HPDF_Array_New (HPDF_MMgr mmgr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Array* HPDF_Array_New(HPDF_MMgr* mmgr);

        // extern HPDF_Array HPDF_Box_Array_New (HPDF_MMgr mmgr, HPDF_Box box);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Array* HPDF_Box_Array_New(HPDF_MMgr* mmgr, HPDF_Box box);

        // extern void HPDF_Array_Free (HPDF_Array array);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Array_Free(HPDF_Array* array);

        // extern HPDF_STATUS HPDF_Array_Write (HPDF_Array array, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_Write(HPDF_Array* array, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern HPDF_STATUS HPDF_Array_Add (HPDF_Array array, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_Add(HPDF_Array* array, void* obj);

        // extern HPDF_STATUS HPDF_Array_Insert (HPDF_Array array, void *target, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_Insert(HPDF_Array* array, void* target, void* obj);

        // extern void * HPDF_Array_GetItem (HPDF_Array array, HPDF_UINT index, HPDF_UINT16 obj_class);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void* HPDF_Array_GetItem(HPDF_Array* array, uint index, ushort obj_class);

        // extern HPDF_STATUS HPDF_Array_AddNumber (HPDF_Array array, HPDF_INT32 value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_AddNumber(HPDF_Array* array, int value);

        // extern HPDF_STATUS HPDF_Array_AddReal (HPDF_Array array, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_AddReal(HPDF_Array* array, float value);

        // extern HPDF_STATUS HPDF_Array_AddNull (HPDF_Array array);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_AddNull(HPDF_Array* array);

        // extern HPDF_STATUS HPDF_Array_AddName (HPDF_Array array, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Array_AddName(HPDF_Array* array, sbyte* value);

        // extern void HPDF_Array_Clear (HPDF_Array array);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Array_Clear(HPDF_Array* array);

        // extern HPDF_UINT HPDF_Array_Items (HPDF_Array array);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Array_Items(HPDF_Array* array);

        // extern HPDF_Dict HPDF_Dict_New (HPDF_MMgr mmgr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Dict* HPDF_Dict_New(HPDF_MMgr* mmgr);

        // extern HPDF_Dict HPDF_DictStream_New (HPDF_MMgr mmgr, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Dict* HPDF_DictStream_New(HPDF_MMgr* mmgr, HPDF_Xref* xref);

        // extern void HPDF_Dict_Free (HPDF_Dict dict);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Dict_Free(HPDF_Dict* dict);

        // extern HPDF_STATUS HPDF_Dict_Write (HPDF_Dict dict, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_Write(HPDF_Dict* dict, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern const char * HPDF_Dict_GetKeyByObj (HPDF_Dict dict, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Dict_GetKeyByObj(HPDF_Dict* dict, void* obj);

        // extern HPDF_STATUS HPDF_Dict_Add (HPDF_Dict dict, const char *key, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_Add(HPDF_Dict* dict, sbyte* key, void* obj);

        // extern void * HPDF_Dict_GetItem (HPDF_Dict dict, const char *key, HPDF_UINT16 obj_class);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void* HPDF_Dict_GetItem(HPDF_Dict* dict, sbyte* key, ushort obj_class);

        // extern HPDF_STATUS HPDF_Dict_AddName (HPDF_Dict dict, const char *key, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_AddName(HPDF_Dict* dict, sbyte* key, sbyte* value);

        // extern HPDF_STATUS HPDF_Dict_AddNumber (HPDF_Dict dict, const char *key, HPDF_INT32 value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_AddNumber(HPDF_Dict* dict, sbyte* key, int value);

        // extern HPDF_STATUS HPDF_Dict_AddReal (HPDF_Dict dict, const char *key, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_AddReal(HPDF_Dict* dict, sbyte* key, float value);

        // extern HPDF_STATUS HPDF_Dict_AddBoolean (HPDF_Dict dict, const char *key, HPDF_BOOL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_AddBoolean(HPDF_Dict* dict, sbyte* key, int value);

        // extern HPDF_STATUS HPDF_Dict_RemoveElement (HPDF_Dict dict, const char *key);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Dict_RemoveElement(HPDF_Dict* dict, sbyte* key);

        // extern HPDF_Proxy HPDF_Proxy_New (HPDF_MMgr mmgr, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Proxy* HPDF_Proxy_New(HPDF_MMgr* mmgr, void* obj);

        // extern HPDF_Xref HPDF_Xref_New (HPDF_MMgr mmgr, HPDF_UINT32 offset);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Xref* HPDF_Xref_New(HPDF_MMgr* mmgr, uint offset);

        // extern void HPDF_Xref_Free (HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Xref_Free(HPDF_Xref* xref);

        // extern HPDF_STATUS HPDF_Xref_Add (HPDF_Xref xref, void *obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Xref_Add(HPDF_Xref* xref, void* obj);

        // extern HPDF_XrefEntry HPDF_Xref_GetEntry (HPDF_Xref xref, HPDF_UINT index);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_XrefEntry* HPDF_Xref_GetEntry(HPDF_Xref* xref, uint index);

        // extern HPDF_STATUS HPDF_Xref_WriteToStream (HPDF_Xref xref, HPDF_Stream stream, HPDF_Encrypt e);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Xref_WriteToStream(HPDF_Xref* xref, HPDF_Stream* stream, HPDF_Encrypt* e);

        // extern HPDF_XrefEntry HPDF_Xref_GetEntryByObjectId (HPDF_Xref xref, HPDF_UINT obj_id);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_XrefEntry* HPDF_Xref_GetEntryByObjectId(HPDF_Xref* xref, uint obj_id);

        // extern HPDF_Catalog HPDF_Catalog_New (HPDF_MMgr mmgr, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Catalog* HPDF_Catalog_New(HPDF_MMgr* mmgr, HPDF_Xref* xref);

        // extern HPDF_NameDict HPDF_Catalog_GetNames (HPDF_Catalog catalog);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_NameDict* HPDF_Catalog_GetNames(HPDF_Catalog* catalog);

        // extern HPDF_STATUS HPDF_Catalog_SetNames (HPDF_Catalog catalog, HPDF_NameDict dict);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Catalog_SetNames(HPDF_Catalog* catalog, HPDF_NameDict* dict);

        // extern HPDF_Pages HPDF_Catalog_GetRoot (HPDF_Catalog catalog);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Pages* HPDF_Catalog_GetRoot(HPDF_Catalog* catalog);

        // extern HPDF_PageLayout HPDF_Catalog_GetPageLayout (HPDF_Catalog catalog);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_PageLayout HPDF_Catalog_GetPageLayout(HPDF_Catalog* catalog);

        // extern HPDF_STATUS HPDF_Catalog_SetPageLayout (HPDF_Catalog catalog, HPDF_PageLayout layout);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Catalog_SetPageLayout(HPDF_Catalog* catalog, HPDF_PageLayout layout);

        // extern HPDF_PageMode HPDF_Catalog_GetPageMode (HPDF_Catalog catalog);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_PageMode HPDF_Catalog_GetPageMode(HPDF_Catalog* catalog);

        // extern HPDF_STATUS HPDF_Catalog_SetPageMode (HPDF_Catalog catalog, HPDF_PageMode mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Catalog_SetPageMode(HPDF_Catalog* catalog, HPDF_PageMode mode);

        // extern HPDF_STATUS HPDF_Catalog_SetOpenAction (HPDF_Catalog catalog, HPDF_Destination open_action);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Catalog_SetOpenAction(HPDF_Catalog* catalog, HPDF_Destination* open_action);

        // extern HPDF_STATUS HPDF_Catalog_AddPageLabel (HPDF_Catalog catalog, HPDF_UINT page_num, HPDF_Dict page_label);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Catalog_AddPageLabel(HPDF_Catalog* catalog, uint page_num, HPDF_Dict* page_label);

        // extern HPDF_UINT HPDF_Catalog_GetViewerPreference (HPDF_Catalog catalog);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Catalog_GetViewerPreference(HPDF_Catalog* catalog);

        // extern HPDF_STATUS HPDF_Catalog_SetViewerPreference (HPDF_Catalog catalog, HPDF_UINT value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Catalog_SetViewerPreference(HPDF_Catalog* catalog, uint value);

        // extern HPDF_BOOL HPDF_Catalog_Validate (HPDF_Catalog catalog);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Catalog_Validate(HPDF_Catalog* catalog);

        // extern HPDF_Image HPDF_Image_Load1BitImageFromMem (HPDF_MMgr mmgr, const HPDF_BYTE *buf, HPDF_Xref xref, HPDF_UINT width, HPDF_UINT height, HPDF_UINT line_width, HPDF_BOOL top_is_first);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_Load1BitImageFromMem(HPDF_MMgr* mmgr, byte* buf, HPDF_Xref* xref, uint width, uint height, uint line_width, int top_is_first);

        // extern HPDF_Image HPDF_Image_LoadPngImage (HPDF_MMgr mmgr, HPDF_Stream png_data, HPDF_Xref xref, HPDF_BOOL delayed_loading);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_LoadPngImage(HPDF_MMgr* mmgr, HPDF_Stream* png_data, HPDF_Xref* xref, int delayed_loading);

        // extern HPDF_Image HPDF_Image_LoadJpegImage (HPDF_MMgr mmgr, HPDF_Stream jpeg_data, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_LoadJpegImage(HPDF_MMgr* mmgr, HPDF_Stream* jpeg_data, HPDF_Xref* xref);

        // extern HPDF_Image HPDF_Image_LoadJpegImageFromMem (HPDF_MMgr mmgr, const HPDF_BYTE *buf, HPDF_UINT size, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_LoadJpegImageFromMem(HPDF_MMgr* mmgr, byte* buf, uint size, HPDF_Xref* xref);

        // extern HPDF_Image HPDF_Image_LoadRawImage (HPDF_MMgr mmgr, HPDF_Stream stream, HPDF_Xref xref, HPDF_UINT width, HPDF_UINT height, HPDF_ColorSpace color_space);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_LoadRawImage(HPDF_MMgr* mmgr, HPDF_Stream* stream, HPDF_Xref* xref, uint width, uint height, HPDF_ColorSpace color_space);

        // extern HPDF_Image HPDF_Image_LoadRawImageFromMem (HPDF_MMgr mmgr, const HPDF_BYTE *buf, HPDF_Xref xref, HPDF_UINT width, HPDF_UINT height, HPDF_ColorSpace color_space, HPDF_UINT bits_per_component);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_LoadRawImageFromMem(HPDF_MMgr* mmgr, byte* buf, HPDF_Xref* xref, uint width, uint height, HPDF_ColorSpace color_space, uint bits_per_component);

        // extern HPDF_BOOL HPDF_Image_Validate (HPDF_Image image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Image_Validate(HPDF_Image* image);

        // extern HPDF_STATUS HPDF_Image_SetMask (HPDF_Image image, HPDF_BOOL mask);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_SetMask(HPDF_Image* image, int mask);

        // extern HPDF_STATUS HPDF_Image_SetColorSpace (HPDF_Image image, HPDF_Array colorspace);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_SetColorSpace(HPDF_Image* image, HPDF_Array* colorspace);

        // extern HPDF_STATUS HPDF_Image_SetRenderingIntent (HPDF_Image image, const char *intent);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_SetRenderingIntent(HPDF_Image* image, sbyte* intent);

        // extern void HPDF_FontDef_Free (HPDF_FontDef fontdef);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_FontDef_Free(HPDF_FontDef* fontdef);

        // extern void HPDF_FontDef_Cleanup (HPDF_FontDef fontdef);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_FontDef_Cleanup(HPDF_FontDef* fontdef);

        // extern HPDF_BOOL HPDF_FontDef_Validate (HPDF_FontDef fontdef);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_FontDef_Validate(HPDF_FontDef* fontdef);

        // extern HPDF_FontDef HPDF_Type1FontDef_New (HPDF_MMgr mmgr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_Type1FontDef_New(HPDF_MMgr* mmgr);

        // extern HPDF_FontDef HPDF_Type1FontDef_Load (HPDF_MMgr mmgr, HPDF_Stream afm, HPDF_Stream font_data);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_Type1FontDef_Load(HPDF_MMgr* mmgr, HPDF_Stream* afm, HPDF_Stream* font_data);

        // extern HPDF_FontDef HPDF_Type1FontDef_Duplicate (HPDF_MMgr mmgr, HPDF_FontDef src);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_Type1FontDef_Duplicate(HPDF_MMgr* mmgr, HPDF_FontDef* src);

        // extern HPDF_STATUS HPDF_Type1FontDef_SetWidths (HPDF_FontDef fontdef, const HPDF_CharData *widths);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Type1FontDef_SetWidths(HPDF_FontDef* fontdef, HPDF_CharData* widths);

        // extern HPDF_INT16 HPDF_Type1FontDef_GetWidthByName (HPDF_FontDef fontdef, const char *gryph_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe short HPDF_Type1FontDef_GetWidthByName(HPDF_FontDef* fontdef, sbyte* gryph_name);

        // extern HPDF_INT16 HPDF_Type1FontDef_GetWidth (HPDF_FontDef fontdef, HPDF_UNICODE unicode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe short HPDF_Type1FontDef_GetWidth(HPDF_FontDef* fontdef, ushort unicode);

        // extern HPDF_FontDef HPDF_Base14FontDef_New (HPDF_MMgr mmgr, const char *font_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_Base14FontDef_New(HPDF_MMgr* mmgr, sbyte* font_name);

        // extern HPDF_FontDef HPDF_TTFontDef_New (HPDF_MMgr mmgr);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_TTFontDef_New(HPDF_MMgr* mmgr);

        // extern HPDF_FontDef HPDF_TTFontDef_Load (HPDF_MMgr mmgr, HPDF_Stream stream, HPDF_BOOL embedding);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_TTFontDef_Load(HPDF_MMgr* mmgr, HPDF_Stream* stream, int embedding);

        // extern HPDF_FontDef HPDF_TTFontDef_Load2 (HPDF_MMgr mmgr, HPDF_Stream stream, HPDF_UINT index, HPDF_BOOL embedding);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_TTFontDef_Load2(HPDF_MMgr* mmgr, HPDF_Stream* stream, uint index, int embedding);

        // extern HPDF_UINT16 HPDF_TTFontDef_GetGlyphid (HPDF_FontDef fontdef, HPDF_UINT16 unicode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_TTFontDef_GetGlyphid(HPDF_FontDef* fontdef, ushort unicode);

        // extern HPDF_INT16 HPDF_TTFontDef_GetCharWidth (HPDF_FontDef fontdef, HPDF_UINT16 unicode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe short HPDF_TTFontDef_GetCharWidth(HPDF_FontDef* fontdef, ushort unicode);

        // extern HPDF_INT16 HPDF_TTFontDef_GetGidWidth (HPDF_FontDef fontdef, HPDF_UINT16 gid);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe short HPDF_TTFontDef_GetGidWidth(HPDF_FontDef* fontdef, ushort gid);

        // extern HPDF_STATUS HPDF_TTFontDef_SaveFontData (HPDF_FontDef fontdef, HPDF_Stream stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_TTFontDef_SaveFontData(HPDF_FontDef* fontdef, HPDF_Stream* stream);

        // extern HPDF_Box HPDF_TTFontDef_GetCharBBox (HPDF_FontDef fontdef, HPDF_UINT16 unicode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Box HPDF_TTFontDef_GetCharBBox(HPDF_FontDef* fontdef, ushort unicode);

        // extern void HPDF_TTFontDef_SetTagName (HPDF_FontDef fontdef, char *tag);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_TTFontDef_SetTagName(HPDF_FontDef* fontdef, sbyte* tag);

        // extern HPDF_FontDef HPDF_CIDFontDef_New (HPDF_MMgr mmgr, char *name, HPDF_FontDef_InitFunc init_fn);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_CIDFontDef_New(HPDF_MMgr* mmgr, sbyte* name, HPDF_FontDef_InitFunc* init_fn);

        // extern HPDF_STATUS HPDF_CIDFontDef_AddWidth (HPDF_FontDef fontdef, const HPDF_CID_Width *widths);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CIDFontDef_AddWidth(HPDF_FontDef* fontdef, HPDF_CID_Width* widths);

        // extern HPDF_INT16 HPDF_CIDFontDef_GetCIDWidth (HPDF_FontDef fontdef, HPDF_UINT16 cid);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe short HPDF_CIDFontDef_GetCIDWidth(HPDF_FontDef* fontdef, ushort cid);

        // extern HPDF_STATUS HPDF_CIDFontDef_ChangeStyle (HPDF_FontDef fontdef, HPDF_BOOL bold, HPDF_BOOL italic);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CIDFontDef_ChangeStyle(HPDF_FontDef* fontdef, int bold, int italic);

        // extern HPDF_Font HPDF_Type1Font_New (HPDF_MMgr mmgr, HPDF_FontDef fontdef, HPDF_Encoder encoder, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Font* HPDF_Type1Font_New(HPDF_MMgr* mmgr, HPDF_FontDef* fontdef, HPDF_Encoder* encoder, HPDF_Xref* xref);

        // extern HPDF_Font HPDF_TTFont_New (HPDF_MMgr mmgr, HPDF_FontDef fontdef, HPDF_Encoder encoder, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Font* HPDF_TTFont_New(HPDF_MMgr* mmgr, HPDF_FontDef* fontdef, HPDF_Encoder* encoder, HPDF_Xref* xref);

        // extern HPDF_Font HPDF_Type0Font_New (HPDF_MMgr mmgr, HPDF_FontDef fontdef, HPDF_Encoder encoder, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Font* HPDF_Type0Font_New(HPDF_MMgr* mmgr, HPDF_FontDef* fontdef, HPDF_Encoder* encoder, HPDF_Xref* xref);

        // extern HPDF_BOOL HPDF_Font_Validate (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Font_Validate(HPDF_Font* font);

        // extern HPDF_GState HPDF_GState_New (HPDF_MMgr mmgr, HPDF_GState current);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_GState* HPDF_GState_New(HPDF_MMgr* mmgr, HPDF_GState* current);

        // extern HPDF_GState HPDF_GState_Free (HPDF_MMgr mmgr, HPDF_GState gstate);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_GState* HPDF_GState_Free(HPDF_MMgr* mmgr, HPDF_GState* gstate);

        // extern HPDF_Dict HPDF_ExtGState_New (HPDF_MMgr mmgr, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Dict* HPDF_ExtGState_New(HPDF_MMgr* mmgr, HPDF_Xref* xref);

        // extern HPDF_BOOL HPDF_ExtGState_Validate (HPDF_ExtGState ext_gstate);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_ExtGState_Validate(HPDF_ExtGState* ext_gstate);

        // extern HPDF_Pages HPDF_Pages_New (HPDF_MMgr mmgr, HPDF_Pages parent, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Pages* HPDF_Pages_New(HPDF_MMgr* mmgr, HPDF_Pages* parent, HPDF_Xref* xref);

        // extern HPDF_BOOL HPDF_Pages_Validate (HPDF_Pages pages);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Pages_Validate(HPDF_Pages* pages);

        // extern HPDF_STATUS HPDF_Pages_AddKids (HPDF_Pages parent, HPDF_Dict kid);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Pages_AddKids(HPDF_Pages* parent, HPDF_Dict* kid);

        // extern HPDF_STATUS HPDF_Page_InsertBefore (HPDF_Page page, HPDF_Page target);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_InsertBefore(HPDF_Page* page, HPDF_Page* target);

        // extern HPDF_BOOL HPDF_Page_Validate (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Page_Validate(HPDF_Page* page);

        // extern HPDF_Page HPDF_Page_New (HPDF_MMgr mmgr, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Page* HPDF_Page_New(HPDF_MMgr* mmgr, HPDF_Xref* xref);

        // extern void * HPDF_Page_GetInheritableItem (HPDF_Page page, const char *key, HPDF_UINT16 obj_class);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void* HPDF_Page_GetInheritableItem(HPDF_Page* page, sbyte* key, ushort obj_class);

        // extern const char * HPDF_Page_GetXObjectName (HPDF_Page page, HPDF_XObject xobj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Page_GetXObjectName(HPDF_Page* page, HPDF_XObject* xobj);

        // extern const char * HPDF_Page_GetLocalFontName (HPDF_Page page, HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Page_GetLocalFontName(HPDF_Page* page, HPDF_Font* font);

        // extern const char * HPDF_Page_GetExtGStateName (HPDF_Page page, HPDF_ExtGState gstate);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Page_GetExtGStateName(HPDF_Page* page, HPDF_ExtGState* gstate);

        // extern HPDF_Box HPDF_Page_GetMediaBox (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Box HPDF_Page_GetMediaBox(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_SetBoxValue (HPDF_Page page, const char *name, HPDF_UINT index, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetBoxValue(HPDF_Page* page, sbyte* name, uint index, float value);

        // extern void HPDF_Page_SetFilter (HPDF_Page page, HPDF_UINT filter);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_Page_SetFilter(HPDF_Page* page, uint filter);

        // extern HPDF_STATUS HPDF_Page_CheckState (HPDF_Page page, HPDF_UINT mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_CheckState(HPDF_Page* page, uint mode);

        // extern HPDF_Outline HPDF_OutlineRoot_New (HPDF_MMgr mmgr, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_OutlineRoot_New(HPDF_MMgr* mmgr, HPDF_Xref* xref);

        // extern HPDF_Outline HPDF_Outline_New (HPDF_MMgr mmgr, HPDF_Outline parent, const char *title, HPDF_Encoder encoder, HPDF_Xref xref);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_Outline_New(HPDF_MMgr* mmgr, HPDF_Outline* parent, sbyte* title, HPDF_Encoder* encoder, HPDF_Xref* xref);

        // extern HPDF_Outline HPDF_Outline_GetFirst (HPDF_Outline outline);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_Outline_GetFirst(HPDF_Outline* outline);

        // extern HPDF_Outline HPDF_Outline_GetLast (HPDF_Outline outline);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_Outline_GetLast(HPDF_Outline* outline);

        // extern HPDF_Outline HPDF_Outline_GetPrev (HPDF_Outline outline);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_Outline_GetPrev(HPDF_Outline* outline);

        // extern HPDF_Outline HPDF_Outline_GetNext (HPDF_Outline outline);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_Outline_GetNext(HPDF_Outline* outline);

        // extern HPDF_Outline HPDF_Outline_GetParent (HPDF_Outline outline);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_Outline_GetParent(HPDF_Outline* outline);

        // extern HPDF_BOOL HPDF_Outline_GetOpened (HPDF_Outline outline);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Outline_GetOpened(HPDF_Outline* outline);

        // extern HPDF_BOOL HPDF_Outline_Validate (HPDF_Outline obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Outline_Validate(HPDF_Outline* obj);

        // extern HPDF_Encoder HPDF_Doc_FindEncoder (HPDF_Doc pdf, const char *encoding_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Encoder* HPDF_Doc_FindEncoder(HPDF_Doc* pdf, sbyte* encoding_name);

        // extern HPDF_FontDef HPDF_Doc_FindFontDef (HPDF_Doc pdf, const char *font_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_Doc_FindFontDef(HPDF_Doc* pdf, sbyte* font_name);

        // extern HPDF_Font HPDF_Doc_FindFont (HPDF_Doc pdf, const char *font_name, const char *encoding_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Font* HPDF_Doc_FindFont(HPDF_Doc* pdf, sbyte* font_name, sbyte* encoding_name);

        // extern HPDF_BOOL HPDF_Doc_Validate (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Doc_Validate(HPDF_Doc* pdf);

        // extern HPDF_Pages HPDF_Doc_GetCurrentPages (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Pages* HPDF_Doc_GetCurrentPages(HPDF_Doc* pdf);

        // extern HPDF_Pages HPDF_Doc_AddPagesTo (HPDF_Doc pdf, HPDF_Pages parent);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Pages* HPDF_Doc_AddPagesTo(HPDF_Doc* pdf, HPDF_Pages* parent);

        // extern HPDF_STATUS HPDF_Doc_SetCurrentPages (HPDF_Doc pdf, HPDF_Pages pages);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_SetCurrentPages(HPDF_Doc* pdf, HPDF_Pages* pages);

        // extern HPDF_STATUS HPDF_Doc_SetCurrentPage (HPDF_Doc pdf, HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_SetCurrentPage(HPDF_Doc* pdf, HPDF_Page* page);

        // extern HPDF_FontDef HPDF_GetFontDef (HPDF_Doc pdf, const char *font_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_GetFontDef(HPDF_Doc* pdf, sbyte* font_name);

        // extern HPDF_STATUS HPDF_Doc_RegisterFontDef (HPDF_Doc pdf, HPDF_FontDef fontdef);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_RegisterFontDef(HPDF_Doc* pdf, HPDF_FontDef* fontdef);

        // extern HPDF_STATUS HPDF_Doc_RegisterEncoder (HPDF_Doc pdf, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_RegisterEncoder(HPDF_Doc* pdf, HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_Doc_SetEncryptOn (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_SetEncryptOn(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_Doc_SetEncryptOff (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_SetEncryptOff(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_Doc_PrepareEncryption (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Doc_PrepareEncryption(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_PDFA_AppendOutputIntents (HPDF_Doc pdf, const char *iccname, HPDF_Dict iccdict);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_PDFA_AppendOutputIntents(HPDF_Doc* pdf, sbyte* iccname, HPDF_Dict* iccdict);

        // extern HPDF_STATUS HPDF_PDFA_SetPDFAConformance (HPDF_Doc pdf, HPDF_PDFAType pdfatype);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_PDFA_SetPDFAConformance(HPDF_Doc* pdf, HPDF_PDFAType pdfatype);

        // extern HPDF_STATUS HPDF_PDFA_GenerateID (HPDF_Doc);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_PDFA_GenerateID(HPDF_Doc*);

        // extern const char * HPDF_GetVersion ();
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_GetVersion();

        // extern HPDF_Doc HPDF_NewEx (HPDF_Error_Handler user_error_fn, HPDF_Alloc_Func user_alloc_fn, HPDF_Free_Func user_free_fn, HPDF_UINT mem_pool_buf_size, void *user_data);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Doc* HPDF_NewEx(HPDF_Error_Handler* user_error_fn, HPDF_Alloc_Func* user_alloc_fn, HPDF_Free_Func* user_free_fn, uint mem_pool_buf_size, void* user_data);



        // extern HPDF_STATUS HPDF_SetErrorHandler (HPDF_Doc pdf, HPDF_Error_Handler user_error_fn);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetErrorHandler(HPDF_Doc* pdf, HPDF_Error_Handler* user_error_fn);





        // extern void HPDF_FreeDoc (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_FreeDoc(HPDF_Doc* pdf);

        // extern HPDF_BOOL HPDF_HasDoc (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_HasDoc(HPDF_Doc* pdf);

        // extern void HPDF_FreeDocAll (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_FreeDocAll(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_SaveToStream (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SaveToStream(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_GetContents (HPDF_Doc pdf, HPDF_BYTE *buf, HPDF_UINT32 *size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_GetContents(HPDF_Doc* pdf, byte* buf, uint* size);

        // extern HPDF_UINT32 HPDF_GetStreamSize (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_GetStreamSize(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_ReadFromStream (HPDF_Doc pdf, HPDF_BYTE *buf, HPDF_UINT32 *size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_ReadFromStream(HPDF_Doc* pdf, byte* buf, uint* size);

        // extern HPDF_STATUS HPDF_ResetStream (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_ResetStream(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_SaveToFile (HPDF_Doc pdf, const char *file_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SaveToFile(HPDF_Doc* pdf, sbyte* file_name);

        // extern HPDF_STATUS HPDF_GetError (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_GetError(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_GetErrorDetail (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_GetErrorDetail(HPDF_Doc* pdf);

        // extern void HPDF_ResetError (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe void HPDF_ResetError(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_CheckError (HPDF_Error error);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_CheckError(HPDF_Error* error);

        // extern HPDF_STATUS HPDF_SetPagesConfiguration (HPDF_Doc pdf, HPDF_UINT page_per_pages);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetPagesConfiguration(HPDF_Doc* pdf, uint page_per_pages);

        // extern HPDF_Page HPDF_GetPageByIndex (HPDF_Doc pdf, HPDF_UINT index);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Page* HPDF_GetPageByIndex(HPDF_Doc* pdf, uint index);

        // extern HPDF_MMgr HPDF_GetPageMMgr (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_MMgr* HPDF_GetPageMMgr(HPDF_Page* page);

        // extern HPDF_PageLayout HPDF_GetPageLayout (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_PageLayout HPDF_GetPageLayout(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_SetPageLayout (HPDF_Doc pdf, HPDF_PageLayout layout);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetPageLayout(HPDF_Doc* pdf, HPDF_PageLayout layout);

        // extern HPDF_PageMode HPDF_GetPageMode (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_PageMode HPDF_GetPageMode(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_SetPageMode (HPDF_Doc pdf, HPDF_PageMode mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetPageMode(HPDF_Doc* pdf, HPDF_PageMode mode);

        // extern HPDF_UINT HPDF_GetViewerPreference (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_GetViewerPreference(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_SetViewerPreference (HPDF_Doc pdf, HPDF_UINT value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetViewerPreference(HPDF_Doc* pdf, uint value);

        // extern HPDF_STATUS HPDF_SetOpenAction (HPDF_Doc pdf, HPDF_Destination open_action);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetOpenAction(HPDF_Doc* pdf, HPDF_Destination* open_action);

        // extern HPDF_Page HPDF_GetCurrentPage (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Page* HPDF_GetCurrentPage(HPDF_Doc* pdf);



        // extern HPDF_Page HPDF_InsertPage (HPDF_Doc pdf, HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Page* HPDF_InsertPage(HPDF_Doc* pdf, HPDF_Page* page);



        // extern HPDF_STATUS HPDF_Page_SetSize (HPDF_Page page, HPDF_PageSizes size, HPDF_PageDirection direction);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetSize(HPDF_Page* page, HPDF_PageSizes size, HPDF_PageDirection direction);

        // extern HPDF_STATUS HPDF_Page_SetRotate (HPDF_Page page, HPDF_UINT16 angle);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetRotate(HPDF_Page* page, ushort angle);

        // extern HPDF_STATUS HPDF_Page_SetZoom (HPDF_Page page, HPDF_REAL zoom);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetZoom(HPDF_Page* page, float zoom);



        // extern const char * HPDF_LoadType1FontFromFile (HPDF_Doc pdf, const char *afm_file_name, const char *data_file_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_LoadType1FontFromFile(HPDF_Doc* pdf, sbyte* afm_file_name, sbyte* data_file_name);

        // extern HPDF_FontDef HPDF_GetTTFontDefFromFile (HPDF_Doc pdf, const char *file_name, HPDF_BOOL embedding);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_FontDef* HPDF_GetTTFontDefFromFile(HPDF_Doc* pdf, sbyte* file_name, int embedding);

        // extern const char * HPDF_LoadTTFontFromFile (HPDF_Doc pdf, const char *file_name, HPDF_BOOL embedding);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_LoadTTFontFromFile(HPDF_Doc* pdf, sbyte* file_name, int embedding);

        // extern const char * HPDF_LoadTTFontFromFile2 (HPDF_Doc pdf, const char *file_name, HPDF_UINT index, HPDF_BOOL embedding);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_LoadTTFontFromFile2(HPDF_Doc* pdf, sbyte* file_name, uint index, int embedding);

        // extern HPDF_STATUS HPDF_AddPageLabel (HPDF_Doc pdf, HPDF_UINT page_num, HPDF_PageNumStyle style, HPDF_UINT first_page, const char *prefix);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_AddPageLabel(HPDF_Doc* pdf, uint page_num, HPDF_PageNumStyle style, uint first_page, sbyte* prefix);

        // extern HPDF_STATUS HPDF_UseJPFonts (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseJPFonts(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseKRFonts (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseKRFonts(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseCNSFonts (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseCNSFonts(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseCNTFonts (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseCNTFonts(HPDF_Doc* pdf);

        // extern HPDF_Outline HPDF_CreateOutline (HPDF_Doc pdf, HPDF_Outline parent, const char *title, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Outline* HPDF_CreateOutline(HPDF_Doc* pdf, HPDF_Outline* parent, sbyte* title, HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_Outline_SetOpened (HPDF_Outline outline, HPDF_BOOL opened);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Outline_SetOpened(HPDF_Outline* outline, int opened);

        // extern HPDF_STATUS HPDF_Outline_SetDestination (HPDF_Outline outline, HPDF_Destination dst);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Outline_SetDestination(HPDF_Outline* outline, HPDF_Destination* dst);

        // extern HPDF_Destination HPDF_Page_CreateDestination (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Destination* HPDF_Page_CreateDestination(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Destination_SetXYZ (HPDF_Destination dst, HPDF_REAL left, HPDF_REAL top, HPDF_REAL zoom);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetXYZ(HPDF_Destination* dst, float left, float top, float zoom);

        // extern HPDF_STATUS HPDF_Destination_SetFit (HPDF_Destination dst);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFit(HPDF_Destination* dst);

        // extern HPDF_STATUS HPDF_Destination_SetFitH (HPDF_Destination dst, HPDF_REAL top);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFitH(HPDF_Destination* dst, float top);

        // extern HPDF_STATUS HPDF_Destination_SetFitV (HPDF_Destination dst, HPDF_REAL left);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFitV(HPDF_Destination* dst, float left);

        // extern HPDF_STATUS HPDF_Destination_SetFitR (HPDF_Destination dst, HPDF_REAL left, HPDF_REAL bottom, HPDF_REAL right, HPDF_REAL top);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFitR(HPDF_Destination* dst, float left, float bottom, float right, float top);

        // extern HPDF_STATUS HPDF_Destination_SetFitB (HPDF_Destination dst);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFitB(HPDF_Destination* dst);

        // extern HPDF_STATUS HPDF_Destination_SetFitBH (HPDF_Destination dst, HPDF_REAL top);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFitBH(HPDF_Destination* dst, float top);

        // extern HPDF_STATUS HPDF_Destination_SetFitBV (HPDF_Destination dst, HPDF_REAL left);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Destination_SetFitBV(HPDF_Destination* dst, float left);

        // extern HPDF_Encoder HPDF_GetEncoder (HPDF_Doc pdf, const char *encoding_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Encoder* HPDF_GetEncoder(HPDF_Doc* pdf, sbyte* encoding_name);

        // extern HPDF_Encoder HPDF_GetCurrentEncoder (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Encoder* HPDF_GetCurrentEncoder(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_SetCurrentEncoder (HPDF_Doc pdf, const char *encoding_name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetCurrentEncoder(HPDF_Doc* pdf, sbyte* encoding_name);

        // extern HPDF_EncoderType HPDF_Encoder_GetType (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_EncoderType HPDF_Encoder_GetType(HPDF_Encoder* encoder);

        // extern HPDF_ByteType HPDF_Encoder_GetByteType (HPDF_Encoder encoder, const char *text, HPDF_UINT index);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ByteType HPDF_Encoder_GetByteType(HPDF_Encoder* encoder, sbyte* text, uint index);

        // extern HPDF_UNICODE HPDF_Encoder_GetUnicode (HPDF_Encoder encoder, HPDF_UINT16 code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_Encoder_GetUnicode(HPDF_Encoder* encoder, ushort code);

        // extern HPDF_WritingMode HPDF_Encoder_GetWritingMode (HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_WritingMode HPDF_Encoder_GetWritingMode(HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_UseJPEncodings (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseJPEncodings(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseKREncodings (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseKREncodings(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseCNSEncodings (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseCNSEncodings(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseCNTEncodings (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseCNTEncodings(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_UseUTFEncodings (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_UseUTFEncodings(HPDF_Doc* pdf);

        // extern HPDF_XObject HPDF_Page_CreateXObjectFromImage (HPDF_Doc pdf, HPDF_Page page, HPDF_Rect rect, HPDF_Image image, HPDF_Boolean zoom);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_XObject* HPDF_Page_CreateXObjectFromImage(HPDF_Doc* pdf, HPDF_Page* page, HPDF_Rect rect, HPDF_Image* image, HPDF_Boolean* zoom);

        // extern HPDF_XObject HPDF_Page_CreateXObjectAsWhiteRect (HPDF_Doc pdf, HPDF_Page page, HPDF_Rect rect);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_XObject* HPDF_Page_CreateXObjectAsWhiteRect(HPDF_Doc* pdf, HPDF_Page* page, HPDF_Rect rect);

        // extern HPDF_Annotation HPDF_Page_Create3DAnnot (HPDF_Page page, HPDF_Rect rect, HPDF_BOOL tb, HPDF_BOOL np, HPDF_U3D u3d, HPDF_Image ap);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_Create3DAnnot(HPDF_Page* page, HPDF_Rect rect, int tb, int np, HPDF_U3D* u3d, HPDF_Image* ap);

        // extern HPDF_Annotation HPDF_Page_CreateTextAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateTextAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateFreeTextAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateFreeTextAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateLineAnnot (HPDF_Page page, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateLineAnnot(HPDF_Page* page, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateWidgetAnnot_WhiteOnlyWhilePrint (HPDF_Doc pdf, HPDF_Page page, HPDF_Rect rect);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateWidgetAnnot_WhiteOnlyWhilePrint(HPDF_Doc* pdf, HPDF_Page* page, HPDF_Rect rect);

        // extern HPDF_Annotation HPDF_Page_CreateWidgetAnnot (HPDF_Page page, HPDF_Rect rect);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateWidgetAnnot(HPDF_Page* page, HPDF_Rect rect);

        // extern HPDF_Annotation HPDF_Page_CreateLinkAnnot (HPDF_Page page, HPDF_Rect rect, HPDF_Destination dst);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateLinkAnnot(HPDF_Page* page, HPDF_Rect rect, HPDF_Destination* dst);

        // extern HPDF_Annotation HPDF_Page_CreateURILinkAnnot (HPDF_Page page, HPDF_Rect rect, const char *uri);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateURILinkAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* uri);

        // extern HPDF_Annotation HPDF_Page_CreateTextMarkupAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder, HPDF_AnnotType subType);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateTextMarkupAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder, HPDF_AnnotType subType);

        // extern HPDF_Annotation HPDF_Page_CreateHighlightAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateHighlightAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateUnderlineAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateUnderlineAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateSquigglyAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateSquigglyAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateStrikeOutAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateStrikeOutAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreatePopupAnnot (HPDF_Page page, HPDF_Rect rect, HPDF_Annotation parent);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreatePopupAnnot(HPDF_Page* page, HPDF_Rect rect, HPDF_Annotation* parent);

        // extern HPDF_Annotation HPDF_Page_CreateStampAnnot (HPDF_Page page, HPDF_Rect rect, HPDF_StampAnnotName name, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateStampAnnot(HPDF_Page* page, HPDF_Rect rect, HPDF_StampAnnotName name, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateProjectionAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateProjectionAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateSquareAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateSquareAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_Annotation HPDF_Page_CreateCircleAnnot (HPDF_Page page, HPDF_Rect rect, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Annotation* HPDF_Page_CreateCircleAnnot(HPDF_Page* page, HPDF_Rect rect, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_LinkAnnot_SetHighlightMode (HPDF_Annotation annot, HPDF_AnnotHighlightMode mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_LinkAnnot_SetHighlightMode(HPDF_Annotation* annot, HPDF_AnnotHighlightMode mode);

        // extern HPDF_STATUS HPDF_LinkAnnot_SetJavaScript (HPDF_Annotation annot, HPDF_JavaScript javascript);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_LinkAnnot_SetJavaScript(HPDF_Annotation* annot, HPDF_JavaScript* javascript);

        // extern HPDF_STATUS HPDF_LinkAnnot_SetBorderStyle (HPDF_Annotation annot, HPDF_REAL width, HPDF_UINT16 dash_on, HPDF_UINT16 dash_off);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_LinkAnnot_SetBorderStyle(HPDF_Annotation* annot, float width, ushort dash_on, ushort dash_off);

        // extern HPDF_STATUS HPDF_TextAnnot_SetIcon (HPDF_Annotation annot, HPDF_AnnotIcon icon);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_TextAnnot_SetIcon(HPDF_Annotation* annot, HPDF_AnnotIcon icon);

        // extern HPDF_STATUS HPDF_TextAnnot_SetOpened (HPDF_Annotation annot, HPDF_BOOL opened);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_TextAnnot_SetOpened(HPDF_Annotation* annot, int opened);

        // extern HPDF_STATUS HPDF_Annot_SetRGBColor (HPDF_Annotation annot, HPDF_RGBColor color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Annot_SetRGBColor(HPDF_Annotation* annot, HPDF_RGBColor color);

        // extern HPDF_STATUS HPDF_Annot_SetCMYKColor (HPDF_Annotation annot, HPDF_CMYKColor color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Annot_SetCMYKColor(HPDF_Annotation* annot, HPDF_CMYKColor color);

        // extern HPDF_STATUS HPDF_Annot_SetGrayColor (HPDF_Annotation annot, HPDF_REAL color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Annot_SetGrayColor(HPDF_Annotation* annot, float color);

        // extern HPDF_STATUS HPDF_Annot_SetNoColor (HPDF_Annotation annot);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Annot_SetNoColor(HPDF_Annotation* annot);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetTitle (HPDF_Annotation annot, const char *name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetTitle(HPDF_Annotation* annot, sbyte* name);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetSubject (HPDF_Annotation annot, const char *name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetSubject(HPDF_Annotation* annot, sbyte* name);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetCreationDate (HPDF_Annotation annot, HPDF_Date value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetCreationDate(HPDF_Annotation* annot, HPDF_Date value);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetTransparency (HPDF_Annotation annot, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetTransparency(HPDF_Annotation* annot, float value);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetIntent (HPDF_Annotation annot, HPDF_AnnotIntent intent);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetIntent(HPDF_Annotation* annot, HPDF_AnnotIntent intent);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetPopup (HPDF_Annotation annot, HPDF_Annotation popup);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetPopup(HPDF_Annotation* annot, HPDF_Annotation* popup);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetRectDiff (HPDF_Annotation annot, HPDF_Rect rect);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetRectDiff(HPDF_Annotation* annot, HPDF_Rect rect);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetCloudEffect (HPDF_Annotation annot, HPDF_INT cloudIntensity);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetCloudEffect(HPDF_Annotation* annot, int cloudIntensity);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetInteriorRGBColor (HPDF_Annotation annot, HPDF_RGBColor color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetInteriorRGBColor(HPDF_Annotation* annot, HPDF_RGBColor color);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetInteriorCMYKColor (HPDF_Annotation annot, HPDF_CMYKColor color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetInteriorCMYKColor(HPDF_Annotation* annot, HPDF_CMYKColor color);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetInteriorGrayColor (HPDF_Annotation annot, HPDF_REAL color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetInteriorGrayColor(HPDF_Annotation* annot, float color);

        // extern HPDF_STATUS HPDF_MarkupAnnot_SetInteriorTransparent (HPDF_Annotation annot);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_MarkupAnnot_SetInteriorTransparent(HPDF_Annotation* annot);

        // extern HPDF_STATUS HPDF_TextMarkupAnnot_SetQuadPoints (HPDF_Annotation annot, HPDF_Point lb, HPDF_Point rb, HPDF_Point rt, HPDF_Point lt);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_TextMarkupAnnot_SetQuadPoints(HPDF_Annotation* annot, HPDF_Point lb, HPDF_Point rb, HPDF_Point rt, HPDF_Point lt);

        // extern HPDF_STATUS HPDF_Annot_Set3DView (HPDF_MMgr mmgr, HPDF_Annotation annot, HPDF_Annotation annot3d, HPDF_Dict view);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Annot_Set3DView(HPDF_MMgr* mmgr, HPDF_Annotation* annot, HPDF_Annotation* annot3d, HPDF_Dict* view);

        // extern HPDF_STATUS HPDF_PopupAnnot_SetOpened (HPDF_Annotation annot, HPDF_BOOL opened);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_PopupAnnot_SetOpened(HPDF_Annotation* annot, int opened);

        // extern HPDF_STATUS HPDF_FreeTextAnnot_SetLineEndingStyle (HPDF_Annotation annot, HPDF_LineAnnotEndingStyle startStyle, HPDF_LineAnnotEndingStyle endStyle);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_FreeTextAnnot_SetLineEndingStyle(HPDF_Annotation* annot, HPDF_LineAnnotEndingStyle startStyle, HPDF_LineAnnotEndingStyle endStyle);

        // extern HPDF_STATUS HPDF_FreeTextAnnot_Set3PointCalloutLine (HPDF_Annotation annot, HPDF_Point startPoint, HPDF_Point kneePoint, HPDF_Point endPoint);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_FreeTextAnnot_Set3PointCalloutLine(HPDF_Annotation* annot, HPDF_Point startPoint, HPDF_Point kneePoint, HPDF_Point endPoint);

        // extern HPDF_STATUS HPDF_FreeTextAnnot_Set2PointCalloutLine (HPDF_Annotation annot, HPDF_Point startPoint, HPDF_Point endPoint);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_FreeTextAnnot_Set2PointCalloutLine(HPDF_Annotation* annot, HPDF_Point startPoint, HPDF_Point endPoint);

        // extern HPDF_STATUS HPDF_FreeTextAnnot_SetDefaultStyle (HPDF_Annotation annot, const char *style);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_FreeTextAnnot_SetDefaultStyle(HPDF_Annotation* annot, sbyte* style);

        // extern HPDF_STATUS HPDF_LineAnnot_SetPosition (HPDF_Annotation annot, HPDF_Point startPoint, HPDF_LineAnnotEndingStyle startStyle, HPDF_Point endPoint, HPDF_LineAnnotEndingStyle endStyle);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_LineAnnot_SetPosition(HPDF_Annotation* annot, HPDF_Point startPoint, HPDF_LineAnnotEndingStyle startStyle, HPDF_Point endPoint, HPDF_LineAnnotEndingStyle endStyle);

        // extern HPDF_STATUS HPDF_LineAnnot_SetLeader (HPDF_Annotation annot, HPDF_INT leaderLen, HPDF_INT leaderExtLen, HPDF_INT leaderOffsetLen);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_LineAnnot_SetLeader(HPDF_Annotation* annot, int leaderLen, int leaderExtLen, int leaderOffsetLen);

        // extern HPDF_STATUS HPDF_LineAnnot_SetCaption (HPDF_Annotation annot, HPDF_BOOL showCaption, HPDF_LineAnnotCapPosition position, HPDF_INT horzOffset, HPDF_INT vertOffset);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_LineAnnot_SetCaption(HPDF_Annotation* annot, int showCaption, HPDF_LineAnnotCapPosition position, int horzOffset, int vertOffset);

        // extern HPDF_STATUS HPDF_Annotation_SetBorderStyle (HPDF_Annotation annot, HPDF_BSSubtype subtype, HPDF_REAL width, HPDF_UINT16 dash_on, HPDF_UINT16 dash_off, HPDF_UINT16 dash_phase);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Annotation_SetBorderStyle(HPDF_Annotation* annot, HPDF_BSSubtype subtype, float width, ushort dash_on, ushort dash_off, ushort dash_phase);

        // extern HPDF_STATUS HPDF_ProjectionAnnot_SetExData (HPDF_Annotation annot, HPDF_ExData exdata);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_ProjectionAnnot_SetExData(HPDF_Annotation* annot, HPDF_ExData* exdata);

        // extern HPDF_3DMeasure HPDF_Page_Create3DC3DMeasure (HPDF_Page page, HPDF_Point3D firstanchorpoint, HPDF_Point3D textanchorpoint);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_3DMeasure* HPDF_Page_Create3DC3DMeasure(HPDF_Page* page, HPDF_Point3D firstanchorpoint, HPDF_Point3D textanchorpoint);

        // extern HPDF_3DMeasure HPDF_Page_CreatePD33DMeasure (HPDF_Page page, HPDF_Point3D annotationPlaneNormal, HPDF_Point3D firstAnchorPoint, HPDF_Point3D secondAnchorPoint, HPDF_Point3D leaderLinesDirection, HPDF_Point3D measurementValuePoint, HPDF_Point3D textYDirection, HPDF_REAL value, const char *unitsString);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_3DMeasure* HPDF_Page_CreatePD33DMeasure(HPDF_Page* page, HPDF_Point3D annotationPlaneNormal, HPDF_Point3D firstAnchorPoint, HPDF_Point3D secondAnchorPoint, HPDF_Point3D leaderLinesDirection, HPDF_Point3D measurementValuePoint, HPDF_Point3D textYDirection, float value, sbyte* unitsString);

        // extern HPDF_STATUS HPDF_3DMeasure_SetName (HPDF_3DMeasure measure, const char *name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DMeasure_SetName(HPDF_3DMeasure* measure, sbyte* name);

        // extern HPDF_STATUS HPDF_3DMeasure_SetColor (HPDF_3DMeasure measure, HPDF_RGBColor color);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DMeasure_SetColor(HPDF_3DMeasure* measure, HPDF_RGBColor color);

        // extern HPDF_STATUS HPDF_3DMeasure_SetTextSize (HPDF_3DMeasure measure, HPDF_REAL textsize);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DMeasure_SetTextSize(HPDF_3DMeasure* measure, float textsize);

        // extern HPDF_STATUS HPDF_3DC3DMeasure_SetTextBoxSize (HPDF_3DMeasure measure, HPDF_INT32 x, HPDF_INT32 y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DC3DMeasure_SetTextBoxSize(HPDF_3DMeasure* measure, int x, int y);

        // extern HPDF_STATUS HPDF_3DC3DMeasure_SetText (HPDF_3DMeasure measure, const char *text, HPDF_Encoder encoder);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DC3DMeasure_SetText(HPDF_3DMeasure* measure, sbyte* text, HPDF_Encoder* encoder);

        // extern HPDF_STATUS HPDF_3DC3DMeasure_SetProjectionAnotation (HPDF_3DMeasure measure, HPDF_Annotation projectionanotation);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DC3DMeasure_SetProjectionAnotation(HPDF_3DMeasure* measure, HPDF_Annotation* projectionanotation);

        // extern HPDF_ExData HPDF_Page_Create3DAnnotExData (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ExData* HPDF_Page_Create3DAnnotExData(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_3DAnnotExData_Set3DMeasurement (HPDF_ExData exdata, HPDF_3DMeasure measure);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DAnnotExData_Set3DMeasurement(HPDF_ExData* exdata, HPDF_3DMeasure* measure);

        // extern HPDF_Dict HPDF_Page_Create3DView (HPDF_Page page, HPDF_U3D u3d, HPDF_Annotation annot3d, const char *name);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Dict* HPDF_Page_Create3DView(HPDF_Page* page, HPDF_U3D* u3d, HPDF_Annotation* annot3d, sbyte* name);

        // extern HPDF_STATUS HPDF_3DView_Add3DC3DMeasure (HPDF_Dict view, HPDF_3DMeasure measure);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_3DView_Add3DC3DMeasure(HPDF_Dict* view, HPDF_3DMeasure* measure);

        // extern HPDF_Image HPDF_LoadPngImageFromMem (HPDF_Doc pdf, const HPDF_BYTE *buffer, HPDF_UINT size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadPngImageFromMem(HPDF_Doc* pdf, byte* buffer, uint size);

        // extern HPDF_Image HPDF_LoadPngImageFromFile (HPDF_Doc pdf, const char *filename);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadPngImageFromFile(HPDF_Doc* pdf, sbyte* filename);

        // extern HPDF_Image HPDF_LoadPngImageFromFile2 (HPDF_Doc pdf, const char *filename);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadPngImageFromFile2(HPDF_Doc* pdf, sbyte* filename);

        // extern HPDF_Image HPDF_LoadJpegImageFromFile (HPDF_Doc pdf, const char *filename);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadJpegImageFromFile(HPDF_Doc* pdf, sbyte* filename);

        // extern HPDF_Image HPDF_LoadJpegImageFromMem (HPDF_Doc pdf, const HPDF_BYTE *buffer, HPDF_UINT size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadJpegImageFromMem(HPDF_Doc* pdf, byte* buffer, uint size);

        // extern HPDF_Image HPDF_LoadU3DFromFile (HPDF_Doc pdf, const char *filename);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadU3DFromFile(HPDF_Doc* pdf, sbyte* filename);

        // extern HPDF_Image HPDF_LoadU3DFromMem (HPDF_Doc pdf, const HPDF_BYTE *buffer, HPDF_UINT size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadU3DFromMem(HPDF_Doc* pdf, byte* buffer, uint size);

        // extern HPDF_Image HPDF_Image_LoadRaw1BitImageFromMem (HPDF_Doc pdf, const HPDF_BYTE *buf, HPDF_UINT width, HPDF_UINT height, HPDF_UINT line_width, HPDF_BOOL black_is1, HPDF_BOOL top_is_first);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_Image_LoadRaw1BitImageFromMem(HPDF_Doc* pdf, byte* buf, uint width, uint height, uint line_width, int black_is1, int top_is_first);

        // extern HPDF_Image HPDF_LoadRawImageFromFile (HPDF_Doc pdf, const char *filename, HPDF_UINT width, HPDF_UINT height, HPDF_ColorSpace color_space);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadRawImageFromFile(HPDF_Doc* pdf, sbyte* filename, uint width, uint height, HPDF_ColorSpace color_space);

        // extern HPDF_Image HPDF_LoadRawImageFromMem (HPDF_Doc pdf, const HPDF_BYTE *buf, HPDF_UINT width, HPDF_UINT height, HPDF_ColorSpace color_space, HPDF_UINT bits_per_component);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Image* HPDF_LoadRawImageFromMem(HPDF_Doc* pdf, byte* buf, uint width, uint height, HPDF_ColorSpace color_space, uint bits_per_component);

        // extern HPDF_STATUS HPDF_Image_AddSMask (HPDF_Image image, HPDF_Image smask);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_AddSMask(HPDF_Image* image, HPDF_Image* smask);

        // extern HPDF_Point HPDF_Image_GetSize (HPDF_Image image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Point HPDF_Image_GetSize(HPDF_Image* image);

        // extern HPDF_STATUS HPDF_Image_GetSize2 (HPDF_Image image, HPDF_Point *size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_GetSize2(HPDF_Image* image, HPDF_Point* size);

        // extern HPDF_UINT HPDF_Image_GetWidth (HPDF_Image image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Image_GetWidth(HPDF_Image* image);

        // extern HPDF_UINT HPDF_Image_GetHeight (HPDF_Image image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Image_GetHeight(HPDF_Image* image);

        // extern HPDF_UINT HPDF_Image_GetBitsPerComponent (HPDF_Image image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Image_GetBitsPerComponent(HPDF_Image* image);

        // extern const char * HPDF_Image_GetColorSpace (HPDF_Image image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Image_GetColorSpace(HPDF_Image* image);

        // extern HPDF_STATUS HPDF_Image_SetColorMask (HPDF_Image image, HPDF_UINT rmin, HPDF_UINT rmax, HPDF_UINT gmin, HPDF_UINT gmax, HPDF_UINT bmin, HPDF_UINT bmax);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_SetColorMask(HPDF_Image* image, uint rmin, uint rmax, uint gmin, uint gmax, uint bmin, uint bmax);

        // extern HPDF_STATUS HPDF_Image_SetMaskImage (HPDF_Image image, HPDF_Image mask_image);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Image_SetMaskImage(HPDF_Image* image, HPDF_Image* mask_image);

        // extern HPDF_STATUS HPDF_SetInfoAttr (HPDF_Doc pdf, HPDF_InfoType type, const char *value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetInfoAttr(HPDF_Doc* pdf, HPDF_InfoType type, sbyte* value);

        // extern const char * HPDF_GetInfoAttr (HPDF_Doc pdf, HPDF_InfoType type);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_GetInfoAttr(HPDF_Doc* pdf, HPDF_InfoType type);

        // extern HPDF_STATUS HPDF_SetInfoDateAttr (HPDF_Doc pdf, HPDF_InfoType type, HPDF_Date value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetInfoDateAttr(HPDF_Doc* pdf, HPDF_InfoType type, HPDF_Date value);

        // extern HPDF_STATUS HPDF_SetPassword (HPDF_Doc pdf, const char *owner_passwd, const char *user_passwd);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetPassword(HPDF_Doc* pdf, sbyte* owner_passwd, sbyte* user_passwd);

        // extern HPDF_STATUS HPDF_SetPermission (HPDF_Doc pdf, HPDF_UINT permission);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetPermission(HPDF_Doc* pdf, uint permission);

        // extern HPDF_STATUS HPDF_SetEncryptionMode (HPDF_Doc pdf, HPDF_EncryptMode mode, HPDF_UINT key_len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetEncryptionMode(HPDF_Doc* pdf, HPDF_EncryptMode mode, uint key_len);

        // extern HPDF_STATUS HPDF_SetCompressionMode (HPDF_Doc pdf, HPDF_UINT mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_SetCompressionMode(HPDF_Doc* pdf, uint mode);

        // extern const char * HPDF_Font_GetFontName (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Font_GetFontName(HPDF_Font* font);

        // extern const char * HPDF_Font_GetEncodingName (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe sbyte* HPDF_Font_GetEncodingName(HPDF_Font* font);

        // extern HPDF_INT HPDF_Font_GetUnicodeWidth (HPDF_Font font, HPDF_UNICODE code);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Font_GetUnicodeWidth(HPDF_Font* font, ushort code);

        // extern HPDF_Box HPDF_Font_GetBBox (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Box HPDF_Font_GetBBox(HPDF_Font* font);

        // extern HPDF_INT HPDF_Font_GetAscent (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Font_GetAscent(HPDF_Font* font);

        // extern HPDF_INT HPDF_Font_GetDescent (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe int HPDF_Font_GetDescent(HPDF_Font* font);

        // extern HPDF_UINT HPDF_Font_GetXHeight (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Font_GetXHeight(HPDF_Font* font);

        // extern HPDF_UINT HPDF_Font_GetCapHeight (HPDF_Font font);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Font_GetCapHeight(HPDF_Font* font);

        // extern HPDF_TextWidth HPDF_Font_TextWidth (HPDF_Font font, const HPDF_BYTE *text, HPDF_UINT len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_TextWidth HPDF_Font_TextWidth(HPDF_Font* font, byte* text, uint len);

        // extern HPDF_UINT HPDF_Font_MeasureText (HPDF_Font font, const HPDF_BYTE *text, HPDF_UINT len, HPDF_REAL width, HPDF_REAL font_size, HPDF_REAL char_space, HPDF_REAL word_space, HPDF_BOOL wordwrap, HPDF_REAL *real_width);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Font_MeasureText(HPDF_Font* font, byte* text, uint len, float width, float font_size, float char_space, float word_space, int wordwrap, float* real_width);

        // extern HPDF_EmbeddedFile HPDF_AttachFile (HPDF_Doc pdf, const char *file);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_EmbeddedFile* HPDF_AttachFile(HPDF_Doc* pdf, sbyte* file);

        // extern HPDF_ExtGState HPDF_CreateExtGState (HPDF_Doc pdf);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ExtGState* HPDF_CreateExtGState(HPDF_Doc* pdf);

        // extern HPDF_STATUS HPDF_ExtGState_SetAlphaStroke (HPDF_ExtGState ext_gstate, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_ExtGState_SetAlphaStroke(HPDF_ExtGState* ext_gstate, float value);

        // extern HPDF_STATUS HPDF_ExtGState_SetAlphaFill (HPDF_ExtGState ext_gstate, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_ExtGState_SetAlphaFill(HPDF_ExtGState* ext_gstate, float value);

        // extern HPDF_STATUS HPDF_ExtGState_SetBlendMode (HPDF_ExtGState ext_gstate, HPDF_BlendMode mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_ExtGState_SetBlendMode(HPDF_ExtGState* ext_gstate, HPDF_BlendMode mode);

        // extern HPDF_REAL HPDF_Page_TextWidth (HPDF_Page page, const char *text);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_TextWidth(HPDF_Page* page, sbyte* text);

        // extern HPDF_UINT HPDF_Page_MeasureText (HPDF_Page page, const char *text, HPDF_REAL width, HPDF_BOOL wordwrap, HPDF_REAL *real_width);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Page_MeasureText(HPDF_Page* page, sbyte* text, float width, int wordwrap, float* real_width);

        // extern HPDF_REAL HPDF_Page_GetWidth (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetWidth(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetHeight (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetHeight(HPDF_Page* page);

        // extern HPDF_UINT16 HPDF_Page_GetGMode (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe ushort HPDF_Page_GetGMode(HPDF_Page* page);

        // extern HPDF_Point HPDF_Page_GetCurrentPos (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Point HPDF_Page_GetCurrentPos(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_GetCurrentPos2 (HPDF_Page page, HPDF_Point *pos);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_GetCurrentPos2(HPDF_Page* page, HPDF_Point* pos);

        // extern HPDF_Point HPDF_Page_GetCurrentTextPos (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Point HPDF_Page_GetCurrentTextPos(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_GetCurrentTextPos2 (HPDF_Page page, HPDF_Point *pos);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_GetCurrentTextPos2(HPDF_Page* page, HPDF_Point* pos);

        // extern HPDF_Font HPDF_Page_GetCurrentFont (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_Font* HPDF_Page_GetCurrentFont(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetCurrentFontSize (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetCurrentFontSize(HPDF_Page* page);

        // extern HPDF_TransMatrix HPDF_Page_GetTransMatrix (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_TransMatrix HPDF_Page_GetTransMatrix(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetLineWidth (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetLineWidth(HPDF_Page* page);

        // extern HPDF_LineCap HPDF_Page_GetLineCap (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_LineCap HPDF_Page_GetLineCap(HPDF_Page* page);

        // extern HPDF_LineJoin HPDF_Page_GetLineJoin (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_LineJoin HPDF_Page_GetLineJoin(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetMiterLimit (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetMiterLimit(HPDF_Page* page);

        // extern HPDF_DashMode HPDF_Page_GetDash (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_DashMode HPDF_Page_GetDash(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetFlat (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetFlat(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetCharSpace (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetCharSpace(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetWordSpace (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetWordSpace(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetHorizontalScalling (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetHorizontalScalling(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetTextLeading (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetTextLeading(HPDF_Page* page);

        // extern HPDF_TextRenderingMode HPDF_Page_GetTextRenderingMode (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_TextRenderingMode HPDF_Page_GetTextRenderingMode(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetTextRaise (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetTextRaise(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetTextRise (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetTextRise(HPDF_Page* page);

        // extern HPDF_RGBColor HPDF_Page_GetRGBFill (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_RGBColor HPDF_Page_GetRGBFill(HPDF_Page* page);

        // extern HPDF_RGBColor HPDF_Page_GetRGBStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_RGBColor HPDF_Page_GetRGBStroke(HPDF_Page* page);

        // extern HPDF_CMYKColor HPDF_Page_GetCMYKFill (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_CMYKColor HPDF_Page_GetCMYKFill(HPDF_Page* page);

        // extern HPDF_CMYKColor HPDF_Page_GetCMYKStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_CMYKColor HPDF_Page_GetCMYKStroke(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetGrayFill (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetGrayFill(HPDF_Page* page);

        // extern HPDF_REAL HPDF_Page_GetGrayStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe float HPDF_Page_GetGrayStroke(HPDF_Page* page);

        // extern HPDF_ColorSpace HPDF_Page_GetStrokingColorSpace (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ColorSpace HPDF_Page_GetStrokingColorSpace(HPDF_Page* page);

        // extern HPDF_ColorSpace HPDF_Page_GetFillingColorSpace (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_ColorSpace HPDF_Page_GetFillingColorSpace(HPDF_Page* page);

        // extern HPDF_TransMatrix HPDF_Page_GetTextMatrix (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_TransMatrix HPDF_Page_GetTextMatrix(HPDF_Page* page);

        // extern HPDF_UINT HPDF_Page_GetGStateDepth (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe uint HPDF_Page_GetGStateDepth(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_SetLineWidth (HPDF_Page page, HPDF_REAL line_width);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetLineWidth(HPDF_Page* page, float line_width);

        // extern HPDF_STATUS HPDF_Page_SetLineCap (HPDF_Page page, HPDF_LineCap line_cap);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetLineCap(HPDF_Page* page, HPDF_LineCap line_cap);

        // extern HPDF_STATUS HPDF_Page_SetLineJoin (HPDF_Page page, HPDF_LineJoin line_join);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetLineJoin(HPDF_Page* page, HPDF_LineJoin line_join);

        // extern HPDF_STATUS HPDF_Page_SetMiterLimit (HPDF_Page page, HPDF_REAL miter_limit);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetMiterLimit(HPDF_Page* page, float miter_limit);

        // extern HPDF_STATUS HPDF_Page_SetDash (HPDF_Page page, const HPDF_UINT16 *dash_ptn, HPDF_UINT num_param, HPDF_UINT phase);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetDash(HPDF_Page* page, ushort* dash_ptn, uint num_param, uint phase);

        // extern HPDF_STATUS HPDF_Page_SetFlat (HPDF_Page page, HPDF_REAL flatness);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetFlat(HPDF_Page* page, float flatness);

        // extern HPDF_STATUS HPDF_Page_SetExtGState (HPDF_Page page, HPDF_ExtGState ext_gstate);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetExtGState(HPDF_Page* page, HPDF_ExtGState* ext_gstate);

        // extern HPDF_STATUS HPDF_Page_GSave (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_GSave(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_GRestore (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_GRestore(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_Concat (HPDF_Page page, HPDF_REAL a, HPDF_REAL b, HPDF_REAL c, HPDF_REAL d, HPDF_REAL x, HPDF_REAL y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Concat(HPDF_Page* page, float a, float b, float c, float d, float x, float y);

        // extern HPDF_STATUS HPDF_Page_MoveTo (HPDF_Page page, HPDF_REAL x, HPDF_REAL y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_MoveTo(HPDF_Page* page, float x, float y);

        // extern HPDF_STATUS HPDF_Page_LineTo (HPDF_Page page, HPDF_REAL x, HPDF_REAL y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_LineTo(HPDF_Page* page, float x, float y);

        // extern HPDF_STATUS HPDF_Page_CurveTo (HPDF_Page page, HPDF_REAL x1, HPDF_REAL y1, HPDF_REAL x2, HPDF_REAL y2, HPDF_REAL x3, HPDF_REAL y3);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_CurveTo(HPDF_Page* page, float x1, float y1, float x2, float y2, float x3, float y3);

        // extern HPDF_STATUS HPDF_Page_CurveTo2 (HPDF_Page page, HPDF_REAL x2, HPDF_REAL y2, HPDF_REAL x3, HPDF_REAL y3);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_CurveTo2(HPDF_Page* page, float x2, float y2, float x3, float y3);

        // extern HPDF_STATUS HPDF_Page_CurveTo3 (HPDF_Page page, HPDF_REAL x1, HPDF_REAL y1, HPDF_REAL x3, HPDF_REAL y3);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_CurveTo3(HPDF_Page* page, float x1, float y1, float x3, float y3);

        // extern HPDF_STATUS HPDF_Page_ClosePath (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ClosePath(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_Rectangle (HPDF_Page page, HPDF_REAL x, HPDF_REAL y, HPDF_REAL width, HPDF_REAL height);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Rectangle(HPDF_Page* page, float x, float y, float width, float height);

        // extern HPDF_STATUS HPDF_Page_Stroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Stroke(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_ClosePathStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ClosePathStroke(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_Fill (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Fill(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_Eofill (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Eofill(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_FillStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_FillStroke(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_EofillStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_EofillStroke(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_ClosePathFillStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ClosePathFillStroke(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_ClosePathEofillStroke (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ClosePathEofillStroke(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_EndPath (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_EndPath(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_Clip (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Clip(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_Eoclip (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Eoclip(HPDF_Page* page);



        // extern HPDF_STATUS HPDF_Page_SetCharSpace (HPDF_Page page, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetCharSpace(HPDF_Page* page, float value);

        // extern HPDF_STATUS HPDF_Page_SetWordSpace (HPDF_Page page, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetWordSpace(HPDF_Page* page, float value);

        // extern HPDF_STATUS HPDF_Page_SetHorizontalScalling (HPDF_Page page, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetHorizontalScalling(HPDF_Page* page, float value);

        // extern HPDF_STATUS HPDF_Page_SetTextLeading (HPDF_Page page, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetTextLeading(HPDF_Page* page, float value);

        // extern HPDF_STATUS HPDF_Page_SetFontAndSize (HPDF_Page page, HPDF_Font font, HPDF_REAL size);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetFontAndSize(HPDF_Page* page, HPDF_Font* font, float size);

        // extern HPDF_STATUS HPDF_Page_SetTextRenderingMode (HPDF_Page page, HPDF_TextRenderingMode mode);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetTextRenderingMode(HPDF_Page* page, HPDF_TextRenderingMode mode);

        // extern HPDF_STATUS HPDF_Page_SetTextRise (HPDF_Page page, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetTextRise(HPDF_Page* page, float value);

        // extern HPDF_STATUS HPDF_Page_SetTextRaise (HPDF_Page page, HPDF_REAL value);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetTextRaise(HPDF_Page* page, float value);

        // extern HPDF_STATUS HPDF_Page_MoveTextPos (HPDF_Page page, HPDF_REAL x, HPDF_REAL y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_MoveTextPos(HPDF_Page* page, float x, float y);

        // extern HPDF_STATUS HPDF_Page_MoveTextPos2 (HPDF_Page page, HPDF_REAL x, HPDF_REAL y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_MoveTextPos2(HPDF_Page* page, float x, float y);

        // extern HPDF_STATUS HPDF_Page_SetTextMatrix (HPDF_Page page, HPDF_REAL a, HPDF_REAL b, HPDF_REAL c, HPDF_REAL d, HPDF_REAL x, HPDF_REAL y);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetTextMatrix(HPDF_Page* page, float a, float b, float c, float d, float x, float y);

        // extern HPDF_STATUS HPDF_Page_MoveToNextLine (HPDF_Page page);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_MoveToNextLine(HPDF_Page* page);

        // extern HPDF_STATUS HPDF_Page_ShowText (HPDF_Page page, const char *text);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ShowText(HPDF_Page* page, sbyte* text);

        // extern HPDF_STATUS HPDF_Page_ShowTextNextLine (HPDF_Page page, const char *text);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ShowTextNextLine(HPDF_Page* page, sbyte* text);

        // extern HPDF_STATUS HPDF_Page_ShowTextNextLineEx (HPDF_Page page, HPDF_REAL word_space, HPDF_REAL char_space, const char *text);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ShowTextNextLineEx(HPDF_Page* page, float word_space, float char_space, sbyte* text);

        // extern HPDF_STATUS HPDF_Page_SetGrayFill (HPDF_Page page, HPDF_REAL gray);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetGrayFill(HPDF_Page* page, float gray);

        // extern HPDF_STATUS HPDF_Page_SetGrayStroke (HPDF_Page page, HPDF_REAL gray);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetGrayStroke(HPDF_Page* page, float gray);

        // extern HPDF_STATUS HPDF_Page_SetRGBFill (HPDF_Page page, HPDF_REAL r, HPDF_REAL g, HPDF_REAL b);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetRGBFill(HPDF_Page* page, float r, float g, float b);

        // extern HPDF_STATUS HPDF_Page_SetRGBStroke (HPDF_Page page, HPDF_REAL r, HPDF_REAL g, HPDF_REAL b);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetRGBStroke(HPDF_Page* page, float r, float g, float b);

        // extern HPDF_STATUS HPDF_Page_SetCMYKFill (HPDF_Page page, HPDF_REAL c, HPDF_REAL m, HPDF_REAL y, HPDF_REAL k);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetCMYKFill(HPDF_Page* page, float c, float m, float y, float k);

        // extern HPDF_STATUS HPDF_Page_SetCMYKStroke (HPDF_Page page, HPDF_REAL c, HPDF_REAL m, HPDF_REAL y, HPDF_REAL k);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetCMYKStroke(HPDF_Page* page, float c, float m, float y, float k);

        // extern HPDF_STATUS HPDF_Page_ExecuteXObject (HPDF_Page page, HPDF_XObject obj);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_ExecuteXObject(HPDF_Page* page, HPDF_XObject* obj);

        // extern HPDF_STATUS HPDF_Page_New_Content_Stream (HPDF_Page page, HPDF_Dict *new_stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_New_Content_Stream(HPDF_Page* page, HPDF_Dict** new_stream);

        // extern HPDF_STATUS HPDF_Page_Insert_Shared_Content_Stream (HPDF_Page page, HPDF_Dict shared_stream);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Insert_Shared_Content_Stream(HPDF_Page* page, HPDF_Dict* shared_stream);



        // extern HPDF_STATUS HPDF_Page_Circle (HPDF_Page page, HPDF_REAL x, HPDF_REAL y, HPDF_REAL ray);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Circle(HPDF_Page* page, float x, float y, float ray);

        // extern HPDF_STATUS HPDF_Page_Ellipse (HPDF_Page page, HPDF_REAL x, HPDF_REAL y, HPDF_REAL xray, HPDF_REAL yray);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Ellipse(HPDF_Page* page, float x, float y, float xray, float yray);

        // extern HPDF_STATUS HPDF_Page_Arc (HPDF_Page page, HPDF_REAL x, HPDF_REAL y, HPDF_REAL ray, HPDF_REAL ang1, HPDF_REAL ang2);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_Arc(HPDF_Page* page, float x, float y, float ray, float ang1, float ang2);

        // extern HPDF_STATUS HPDF_Page_TextOut (HPDF_Page page, HPDF_REAL xpos, HPDF_REAL ypos, const char *text);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_TextOut(HPDF_Page* page, float xpos, float ypos, sbyte* text);

        // extern HPDF_STATUS HPDF_Page_TextRect (HPDF_Page page, HPDF_REAL left, HPDF_REAL top, HPDF_REAL right, HPDF_REAL bottom, const char *text, HPDF_TextAlignment align, HPDF_UINT *len);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_TextRect(HPDF_Page* page, float left, float top, float right, float bottom, sbyte* text, HPDF_TextAlignment align, uint* len);

        // extern HPDF_STATUS HPDF_Page_SetSlideShow (HPDF_Page page, HPDF_TransitionStyle type, HPDF_REAL disp_time, HPDF_REAL trans_time);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe nuint HPDF_Page_SetSlideShow(HPDF_Page* page, HPDF_TransitionStyle type, float disp_time, float trans_time);

        // extern HPDF_OutputIntent HPDF_ICC_LoadIccFromMem (HPDF_Doc pdf, HPDF_MMgr mmgr, HPDF_Stream iccdata, HPDF_Xref xref, int numcomponent);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_OutputIntent* HPDF_ICC_LoadIccFromMem(HPDF_Doc* pdf, HPDF_MMgr* mmgr, HPDF_Stream* iccdata, HPDF_Xref* xref, int numcomponent);

        // extern HPDF_OutputIntent HPDF_LoadIccProfileFromFile (HPDF_Doc pdf, const char *icc_file_name, int numcomponent);
        [DllImport("__Internal")]
        [Verify(PlatformInvoke)]
        static extern unsafe HPDF_OutputIntent* HPDF_LoadIccProfileFromFile(HPDF_Doc* pdf, sbyte* icc_file_name, int numcomponent);
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_MPool_Node_Rec
    {
        public unsafe byte* buf;

        public uint size;

        public uint used_size;

        public unsafe HPDF_MPool_Node* next_node;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_MMgr_Rec
    {
        public unsafe HPDF_Error* error;

        public unsafe HPDF_Alloc_Func* alloc_fn;

        public unsafe HPDF_Free_Func* free_fn;

        public unsafe HPDF_MPool_Node* mpool;

        public uint buf_size;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_List_Rec
    {
        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public uint block_siz;

        public uint items_per_block;

        public uint count;

        public unsafe void** obj;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_MD5_CTX
    {
        public uint[] buf;

        public uint[] bits;

        public byte[] @in;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_ARC4_Ctx_Rec
    {
        public byte idx1;

        public byte idx2;

        public byte[] state;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Encrypt_Rec
    {
        public HPDF_EncryptMode mode;

        public uint key_len;

        public byte[] owner_passwd;

        public byte[] user_passwd;

        public byte[] owner_key;

        public byte[] user_key;

        public int permission;

        public byte[] encrypt_id;

        public byte[] encryption_key;

        public byte[] md5_encryption_key;

        public HPDF_ARC4_Ctx_Rec arc4ctx;
    }

    public enum HPDF_StreamType : uint
    {
        Unknown = 0,
        Callback,
        File,
        Memory
    }

    public enum HPDF_WhenceMode : uint
    {
        Set = 0,
        Cur,
        End
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_MemStreamAttr_Rec
    {
        public unsafe HPDF_List* buf;

        public uint buf_siz;

        public uint w_pos;

        public unsafe byte* w_ptr;

        public uint r_ptr_idx;

        public uint r_pos;

        public unsafe byte* r_ptr;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Stream_Rec
    {
        public uint sig_bytes;

        public HPDF_StreamType type;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public uint size;

        public unsafe HPDF_Stream_Write_Func* write_fn;

        public unsafe HPDF_Stream_Read_Func* read_fn;

        public unsafe HPDF_Stream_Seek_Func* seek_fn;

        public unsafe HPDF_Stream_Free_Func* free_fn;

        public unsafe HPDF_Stream_Tell_Func* tell_fn;

        public unsafe HPDF_Stream_Size_Func* size_fn;

        public unsafe void* attr;
    }

    public enum HPDF_EncodingType : uint
    {
        StandardEncoding = 0,
        MacRomanEncoding,
        WinAnsiEncoding,
        FontSpecific,
        EncodingEof
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_ParseText_Rec
    {
        public unsafe byte* text;

        public uint index;

        public uint len;

        public HPDF_ByteType byte_type;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Encoder_Rec
    {
        public uint sig_bytes;

        public sbyte[] name;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public HPDF_EncoderType type;

        public unsafe HPDF_Encoder_ByteType_Func* byte_type_fn;

        public unsafe HPDF_Encoder_ToUnicode_Func* to_unicode_fn;

        public unsafe HPDF_Encoder_EncodeText_Func* encode_text_fn;

        public unsafe HPDF_Encoder_Write_Func* write_fn;

        public unsafe HPDF_Encoder_Free_Func* free_fn;

        public unsafe HPDF_Encoder_Init_Func* init_fn;

        public unsafe void* attr;
    }

    public enum HPDF_BaseEncodings : uint
    {
        Standard,
        WinAnsi,
        MacRoman,
        FontSpecific,
        Eof
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_BasicEncoderAttr_Rec
    {
        public sbyte[] base_encoding;

        public byte first_char;

        public byte last_char;

        public ushort[] unicode_map;

        public int has_differences;

        public byte[] differences;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_CidRange_Rec
    {
        public ushort from;

        public ushort to;

        public ushort cid;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_UnicodeMap_Rec
    {
        public ushort code;

        public ushort unicode;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_CMapEncoderAttr_Rec
    {
        public ushort[][] unicode_map;

        public ushort[][] cid_map;

        public ushort[] jww_line_head;

        public unsafe HPDF_List* cmap_range;

        public unsafe HPDF_List* notdef_range;

        public unsafe HPDF_List* code_space_range;

        public HPDF_WritingMode writing_mode;

        public sbyte[] registry;

        public sbyte[] ordering;

        public int suppliment;

        public unsafe HPDF_CMapEncoder_ByteType_Func* is_lead_byte_fn;

        public unsafe HPDF_CMapEncoder_ByteType_Func* is_trial_byte_fn;

        public int uid_offset;

        public uint[] xuid;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Obj_Header
    {
        public uint obj_id;

        public ushort gen_no;

        public ushort obj_class;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Null_Rec
    {
        public HPDF_Obj_Header header;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Boolean_Rec
    {
        public HPDF_Obj_Header header;

        public int value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Number_Rec
    {
        public HPDF_Obj_Header header;

        public int value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Real_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe HPDF_Error* error;

        public float value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Name_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe HPDF_Error* error;

        public sbyte[] value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_String_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public unsafe HPDF_Encoder* encoder;

        public unsafe byte* value;

        public uint len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Binary_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public unsafe byte* value;

        public uint len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Array_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public unsafe HPDF_List* list;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Dict_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public unsafe HPDF_List* list;

        public unsafe HPDF_Dict_BeforeWriteFunc* before_write_fn;

        public unsafe HPDF_Dict_OnWriteFunc* write_fn;

        public unsafe HPDF_Dict_AfterWriteFunc* after_write_fn;

        public unsafe HPDF_Dict_FreeFunc* free_fn;

        public unsafe HPDF_Stream* stream;

        public uint filter;

        public unsafe HPDF_Dict* filterParams;

        public unsafe void* attr;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_DictElement_Rec
    {
        public sbyte[] key;

        public unsafe void* value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Proxy_Rec
    {
        public HPDF_Obj_Header header;

        public unsafe void* obj;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_XrefEntry_Rec
    {
        public sbyte entry_typ;

        public uint byte_offset;

        public ushort gen_no;

        public unsafe void* obj;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Xref_Rec
    {
        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public uint start_offset;

        public unsafe HPDF_List* entries;

        public uint addr;

        public unsafe HPDF_Xref* prev;

        public unsafe HPDF_Dict* trailer;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_CharData
    {
        public short char_cd;

        public ushort unicode;

        public short width;
    }

    public enum HPDF_FontDefType : uint
    {
        Type1,
        Truetype,
        Cid,
        Uninitialized,
        Eof
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_CID_Width
    {
        public ushort cid;

        public short width;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_FontDef_Rec
    {
        public uint sig_bytes;

        public sbyte[] base_font;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Error* error;

        public HPDF_FontDefType type;

        public unsafe HPDF_FontDef_CleanFunc* clean_fn;

        public unsafe HPDF_FontDef_FreeFunc* free_fn;

        public unsafe HPDF_FontDef_InitFunc* init_fn;

        public short ascent;

        public short descent;

        public uint flags;

        public HPDF_Box font_bbox;

        public short italic_angle;

        public ushort stemv;

        public short avg_width;

        public short max_width;

        public short missing_width;

        public ushort stemh;

        public ushort x_height;

        public ushort cap_height;

        public unsafe HPDF_Dict* descriptor;

        public unsafe HPDF_Stream* data;

        public int valid;

        public unsafe void* attr;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Type1FontDefAttr_Rec
    {
        public byte first_char;

        public byte last_char;

        public unsafe HPDF_CharData* widths;

        public uint widths_count;

        public short leading;

        public unsafe sbyte* char_set;

        public sbyte[] encoding_scheme;

        public uint length1;

        public uint length2;

        public uint length3;

        public int is_base14font;

        public int is_fixed_pitch;

        public unsafe HPDF_Stream* font_data;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTFTable
    {
        public sbyte[] tag;

        public uint check_sum;

        public uint offset;

        public uint length;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_OffsetTbl
    {
        public uint sfnt_version;

        public ushort num_tables;

        public ushort search_range;

        public ushort entry_selector;

        public ushort range_shift;

        public unsafe HPDF_TTFTable* table;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_CmapRange
    {
        public ushort format;

        public ushort length;

        public ushort language;

        public ushort seg_count_x2;

        public ushort search_range;

        public ushort entry_selector;

        public ushort range_shift;

        public unsafe ushort* end_count;

        public ushort reserved_pad;

        public unsafe ushort* start_count;

        public unsafe short* id_delta;

        public unsafe ushort* id_range_offset;

        public unsafe ushort* glyph_id_array;

        public uint glyph_id_array_count;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_GryphOffsets
    {
        public uint base_offset;

        public unsafe uint* offsets;

        public unsafe byte* flgs;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_LongHorMetric
    {
        public ushort advance_width;

        public short lsb;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_FontHeader
    {
        public byte[] version_number;

        public uint font_revision;

        public uint check_sum_adjustment;

        public uint magic_number;

        public ushort flags;

        public ushort units_per_em;

        public byte[] created;

        public byte[] modified;

        public short x_min;

        public short y_min;

        public short x_max;

        public short y_max;

        public ushort mac_style;

        public ushort lowest_rec_ppem;

        public short font_direction_hint;

        public short index_to_loc_format;

        public short glyph_data_format;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_NameRecord
    {
        public ushort platform_id;

        public ushort encoding_id;

        public ushort language_id;

        public ushort name_id;

        public ushort length;

        public ushort offset;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTF_NamingTable
    {
        public ushort format;

        public ushort count;

        public ushort string_offset;

        public unsafe HPDF_TTF_NameRecord* name_records;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_TTFontDefAttr_Rec
    {
        public sbyte[] base_font;

        public byte first_char;

        public byte last_char;

        public unsafe sbyte* char_set;

        public sbyte[] tag_name;

        public sbyte[] tag_name2;

        public HPDF_TTF_FontHeader header;

        public HPDF_TTF_GryphOffsets glyph_tbl;

        public ushort num_glyphs;

        public HPDF_TTF_NamingTable name_tbl;

        public unsafe HPDF_TTF_LongHorMetric* h_metric;

        public ushort num_h_metric;

        public HPDF_TTF_OffsetTbl offset_tbl;

        public HPDF_TTF_CmapRange cmap;

        public ushort fs_type;

        public byte[] sfamilyclass;

        public byte[] panose;

        public uint code_page_range1;

        public uint code_page_range2;

        public uint length1;

        public int embedding;

        public int is_cidfont;

        public unsafe HPDF_Stream* stream;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_CIDFontDefAttr_Rec
    {
        public unsafe HPDF_List* widths;

        public short DW;

        public short[] DW2;
    }

    public enum HPDF_FontType : uint
    {
        Type1 = 0,
        Truetype,
        Type3,
        Type0Cid,
        Type0Tt,
        CidType0,
        CidType2,
        Mmtype1
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_FontAttr_Rec
    {
        public HPDF_FontType type;

        public HPDF_WritingMode writing_mode;

        public unsafe HPDF_Font_TextWidths_Func* text_width_fn;

        public unsafe HPDF_Font_MeasureText_Func* measure_text_fn;

        public unsafe HPDF_FontDef* fontdef;

        public unsafe HPDF_Encoder* encoder;

        public unsafe short* widths;

        public unsafe byte* used;

        public unsafe HPDF_Xref* xref;

        public unsafe HPDF_Font* descendant_font;

        public unsafe HPDF_Dict* map_stream;

        public unsafe HPDF_Dict* cmap_stream;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_GState_Rec
    {
        public HPDF_TransMatrix trans_matrix;

        public float line_width;

        public HPDF_LineCap line_cap;

        public HPDF_LineJoin line_join;

        public float miter_limit;

        public HPDF_DashMode dash_mode;

        public float flatness;

        public float char_space;

        public float word_space;

        public float h_scalling;

        public float text_leading;

        public HPDF_TextRenderingMode rendering_mode;

        public float text_rise;

        public HPDF_ColorSpace cs_fill;

        public HPDF_ColorSpace cs_stroke;

        public HPDF_RGBColor rgb_fill;

        public HPDF_RGBColor rgb_stroke;

        public HPDF_CMYKColor cmyk_fill;

        public HPDF_CMYKColor cmyk_stroke;

        public float gray_fill;

        public float gray_stroke;

        public unsafe HPDF_Font* font;

        public float font_size;

        public HPDF_WritingMode writing_mode;

        public unsafe HPDF_GState* prev;

        public uint depth;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_PageAttr_Rec
    {
        public unsafe HPDF_Pages* parent;

        public unsafe HPDF_Dict* fonts;

        public unsafe HPDF_Dict* xobjects;

        public unsafe HPDF_Dict* ext_gstates;

        public unsafe HPDF_GState* gstate;

        public HPDF_Point str_pos;

        public HPDF_Point cur_pos;

        public HPDF_Point text_pos;

        public HPDF_TransMatrix text_matrix;

        public ushort gmode;

        public unsafe HPDF_Dict* contents;

        public unsafe HPDF_Stream* stream;

        public unsafe HPDF_Xref* xref;

        public uint compression_mode;

        public unsafe HPDF_PDFVer* ver;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct HPDF_Doc_Rec
    {
        public uint sig_bytes;

        public HPDF_PDFVer pdf_version;

        public unsafe HPDF_MMgr* mmgr;

        public unsafe HPDF_Catalog* catalog;

        public unsafe HPDF_Outline* outlines;

        public unsafe HPDF_Xref* xref;

        public unsafe HPDF_Pages* root_pages;

        public unsafe HPDF_Pages* cur_pages;

        public unsafe HPDF_Page* cur_page;

        public unsafe HPDF_List* page_list;

        public HPDF_Error_Rec error;

        public unsafe HPDF_Dict* info;

        public unsafe HPDF_Dict* trailer;

        public unsafe HPDF_List* font_mgr;

        public byte[] ttfont_tag;

        public unsafe HPDF_List* fontdef_list;

        public unsafe HPDF_List* encoder_list;

        public unsafe HPDF_Encoder* cur_encoder;

        public int compression_mode;

        public int encrypt_on;

        public unsafe HPDF_EncryptDict* encrypt_dict;

        public unsafe HPDF_Encoder* def_encoder;

        public uint page_per_pages;

        public uint cur_page_num;

        public unsafe HPDF_Stream* stream;
    }
}